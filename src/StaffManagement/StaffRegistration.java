package StaffManagement;



import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import net.proteanit.sql.DbUtils;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import Financial.MyCodes.Methods;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.StringTokenizer;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author P.Shashitha
 */
public class StaffRegistration extends javax.swing.JInternalFrame {
    int timeRun;
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    String SID ="";
    
    public StaffRegistration() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        con = StaffManagement.DbConnector.con();
        tableload();
        
        
        jTable2.setDefaultEditor(Object.class, null);
        
        
        
    }
    
        public void tableload()
        {
            try 
            {
                String sql = "SELECT * FROM staff";
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
            
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE); 
            }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        Email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        staffPos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Qualifications = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        Address = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        gender = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        contact = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        wType = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        DOB = new com.toedter.calendar.JDateChooser();
        DOR = new com.toedter.calendar.JDateChooser();
        jLabel24 = new javax.swing.JLabel();
        NIC = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setAutoscrolls(true);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Staff Registration:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Address:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("E-Mail:");

        name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        Email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                EmailKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("StaffPos:");

        staffPos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        staffPos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                staffPosKeyReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Qualifications:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Date Of Registration:");

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/addstaff.png"))); // NOI18N
        jButton1.setText("Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        Qualifications.setColumns(20);
        Qualifications.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Qualifications.setRows(5);
        jScrollPane1.setViewportView(Qualifications);

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Address.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AddressKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AddressKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Gender:");

        gender.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));
        gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genderActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Date Of Birth:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("Contact No:");

        contact.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contactKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 51, 51));
        jLabel5.setText(" ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 51, 51));
        jLabel13.setText(" ");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 51, 51));
        jLabel14.setText(" ");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 51, 51));
        jLabel15.setText(" ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 51, 51));
        jLabel16.setText(" ");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 51, 51));
        jLabel17.setText(" ");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 51, 51));
        jLabel18.setText(" ");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 51, 51));
        jLabel19.setText(" ");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setText("Work Type:");

        wType.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        wType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select work period!", "Part Time", "Full Time" }));
        wType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wTypeActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 51, 51));
        jLabel21.setText(" ");

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Update NIC:");

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText(" ");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/staff detail small.png"))); // NOI18N
        jButton2.setText("Update member");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setText("Clear All Text");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        DOB.setDateFormatString("dd/MM/yyyy");
        DOB.setMaxSelectableDate(new Date());
        DOB.setMinSelectableDate(new java.util.Date(-62135785732000L));
        DOB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DOBMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DOBMouseReleased(evt);
            }
        });
        DOB.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                DOBInputMethodTextChanged(evt);
            }
        });
        DOB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                DOBPropertyChange(evt);
            }
        });
        DOB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                DOBKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DOBKeyTyped(evt);
            }
        });

        DOR.setDateFormatString("dd/MM/yyyy");
        DOR.setMaxSelectableDate(new Date());
        DOR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DORMouseClicked(evt);
            }
        });
        DOR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DORKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DORKeyTyped(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("NIC:   ");

        NIC.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NIC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NICActionPerformed(evt);
            }
        });
        NIC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NICKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NICKeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 51, 51));
        jLabel25.setText(" ");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setText("Set Status:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Task", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jTable2.setBorder(new javax.swing.border.MatteBorder(null));
        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "SID", "Name", "Address", "Age", "E-Mail", "StaffPos", "dateOfReg", "Qualifications"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setToolTipText("Staff Comon Registration Details");
        jTable2.setMinimumSize(new java.awt.Dimension(120, 48));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                .addContainerGap())
        );

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Free", "Not Free" }));

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setText("DEMO");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(wType, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(NIC, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(staffPos, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Email, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DOB, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Address, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(name, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DOR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(contact, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 18, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addGap(18, 18, 18)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(124, 124, 124)
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jButton5)
                                                .addGap(119, 119, 119)
                                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton4)
                                .addComponent(jButton5))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(NIC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(DOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffPos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel26)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(DOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(wType)
                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jLabel22)
                        .addComponent(jLabel23))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        tableload();
        String Name = name.getText();
        String Gender = gender.getSelectedItem().toString();
        String NiC = NIC.getText();
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        String birDay = df.format(DOB.getDate());
        String phone = contact.getText();
        String address = Address.getText();
        String startDate = df.format(DOR.getDate());        
        String staffpos = staffPos.getText();
        String email = Email.getText();
        String qualific = Qualifications.getText();
        String wrktype = wType.getSelectedItem().toString();
        String status = jComboBox1.getSelectedItem().toString();

        //String retireDate = ((JTextField)e8.getDateEditor().getUiComponent()).getText();
        //String salary = e9.getText();
        
        if(jLabel5.getText()!=null && jLabel13.getText()!=null && jLabel14.getText()!=null && jLabel16.getText()!=null
                && jLabel17.getText()!=null && jLabel15.getText()!=null && jLabel18.getText()!=null && jLabel18.getText()!=null && DOB.getDate().after(new Date())&& DOR.getDate().after(new Date()))
        {
            
            JOptionPane.showMessageDialog(null,"Some fields are not filled correctly !");
            return;
        }
        else
        {
            try
            {
                String q = "INSERT INTO staff (Name,Address,NIC,Email,DOB,StaffPos,workType,regDate,qualific,Phone,status,Gender )"
                        + "VALUES('"+ Name +"','"+ address +"','"+NiC+"','"+ email +"','"+ birDay +"','"+ staffpos +"','"+ wrktype +"','"+ startDate +"','"+ qualific +"','"+ phone +"','"+status+"','"+Gender+"')";

                pst = con.prepareStatement(q);
                pst.execute();

                tableload();
                
                
                
                
            name.setText("");
            Address.setText("");
            NIC.setText("");
            DOB.setDate(new Date());
            DOB.cleanup();
            
            gender.setSelectedIndex(0);
            Email.setText("");
            staffPos.setText("");
            DOR.setDate(new Date());
            DOR.cleanup();
            contact.setText("");
            Qualifications.setText("");
            
            jComboBox1.setSelectedIndex(0);
            wType.setSelectedIndex(0);
            JOptionPane.showMessageDialog(null, "Data successfuly added to database!");
            }
            catch (Exception e)
            {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);   
            
            }
            
                
                
            
        
        }    }//GEN-LAST:event_jButton1ActionPerformed

    private void nameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyReleased
                
        
        
        String Name=name.getText();
        
        if(name.getText().isEmpty()){
            
            jLabel5.setText("*Name cannot be empty!");        
        }
        else if(Name.matches(".*\\d+.*")){
            
            jLabel5.setText("*Name cannot contain numbers!");
        }
        else{
            jLabel5.setText("");
        }
        
        if(!Methods.validateTxt(name.getText(), 70))
            
            jLabel5.setText("Longer Name!");
        
        
        if(!jLabel5.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_nameKeyReleased

    private void AddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddressKeyReleased
         if(Address.getText().length()>75)
           jLabel13.setText("Exceeded Length!");
       else
           jLabel13.setText("");
       
        
            
    }//GEN-LAST:event_AddressKeyReleased

    private void EmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailKeyReleased
    EmailValidator emailValidator = new EmailValidator();
            if(!emailValidator.validate(Email.getText().trim())) 
                jLabel15.setText("Invalid Email!"); 
            else{
                jLabel15.setText(""); 

                 
        if(!jLabel15.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
        else
        {
        
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        }
   }    }//GEN-LAST:event_EmailKeyReleased

    private void staffPosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_staffPosKeyReleased
        String staffpos=staffPos.getText();
        
        if(staffPos.getText().isEmpty()){
            
            jLabel16.setText("*Staff Position must be set!");        
        }
        else if(staffpos.matches(".*\\d+.*")){
            
            jLabel16.setText("*Staff Position cannot contain numbers!");
        }
        else{
            jLabel16.setText(null);
        }
        
        if(!jLabel16.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
        else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_staffPosKeyReleased

    private void genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genderActionPerformed
    if(gender.getSelectedItem().toString()=="Select Gender"){
            
            jLabel19.setText("Select!");
                    
        }
        else{
            jLabel19.setText("");
            
            
             
        if(!jLabel19.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
        }    }//GEN-LAST:event_genderActionPerformed

    private void contactKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactKeyReleased
        String phone=contact.getText();
        
        if(contact.getText().isEmpty()){
            
            jLabel18.setText("*Phone Number cannot be empty!");
                    
        }
        else if(contact.getText().length()<10){
            
            jLabel18.setText("*Invalid phone number!");
        }
        else if(contact.getText().length()==10){
            
            if(!phone.matches("[0-9]+")){
            
                jLabel18.setText("*Phone number cannot contain letters!");
            }
            else{
                jLabel18.setText("");
            }
            
        }
        else if(contact.getText().length()>10)
        {
            jLabel18.setText("*Invalid phone number!");
        }
      
         
        if(!jLabel18.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_contactKeyReleased

    private void wTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wTypeActionPerformed
        if(wType.getSelectedItem().toString()=="Select work period!"){
            
            jLabel21.setText("Select!");
                      
        }
        else{
            jLabel21.setText("");
        }    
        
         
        if(!jLabel21.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_wTypeActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        DateFormat f = new SimpleDateFormat("dd/MM/yyyy"); 
        int r = jTable2.getSelectedRow();
        SID = jTable2.getValueAt(r, 0).toString();
        String Name = jTable2.getValueAt(r, 1).toString();
        String address = jTable2.getValueAt(r, 3).toString();
        String NiC = jTable2.getValueAt(r,2 ).toString();
        String EMail = jTable2.getValueAt(r, 4).toString();
        String DoB =jTable2.getValueAt(r, 5).toString();
        String StaffPos = jTable2.getValueAt(r, 6).toString();
        String workType = jTable2.getValueAt(r, 7).toString();
        String regDate = jTable2.getValueAt(r, 8).toString();
        String qualific = jTable2.getValueAt(r, 11).toString();
        String Phone = jTable2.getValueAt(r, 12).toString();
        String Gender = jTable2.getValueAt(r, 14).toString();
        String status = jTable2.getValueAt(r, 13).toString();
        
        if(status.equals("Free")){
            jComboBox1.setSelectedIndex(0);
        }
        else
            jComboBox1.setSelectedIndex(1);
        
        
        jLabel23.setText(SID);
        name.setText(Name);
        Address.setText(address);
        NIC.setText(NiC);
        try {
            DOB.setDate(f.parse(DoB));
        } catch (ParseException ex) {
            Logger.getLogger(StaffRegistration.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);
        }
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
        Email.setText(EMail);
        staffPos.setText(StaffPos);
        try {
            DOR.setDate(df.parse(regDate));
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(StaffRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        contact.setText(Phone);
        Qualifications.setText(qualific);
        
        if(Gender.matches("Male"))
            gender.setSelectedIndex(1);
        else if(Gender.matches("Female"))
            gender.setSelectedIndex(2);
        else
            gender.setSelectedIndex(0);
        
        if(workType.matches("Part Time"))
                wType.setSelectedIndex(1);
        else if(workType.matches("Full Time"))
                wType.setSelectedIndex(2);
        else
                wType.setSelectedIndex(0);


        
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jLabel23.setText("");
        name.setText("");
        Address.setText("");
        DOB.cleanup();
        Email.setText("");
        staffPos.setText("");
        DOR.cleanup();
        contact.setText("");
        Qualifications.setText("");
        NIC.setText("");
        gender.setSelectedIndex(0);
        wType.setSelectedIndex(0);
        
        jComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String Name = name.getText();
        String Gender = gender.getSelectedItem().toString();
        
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
        String birDay = df.format(DOB.getDate());
        String NiC = NIC.getText();
        String phone = contact.getText();
        String address = Address.getText();
        String startDate = df.format(DOR.getDate());        
        String staffpos = staffPos.getText();
        String email = Email.getText();
        String qualific = Qualifications.getText();
        String wrktype = wType.getSelectedItem().toString();
        String status = jComboBox1.getSelectedItem().toString();
        
        try {
            
                    String q = "UPDATE staff SET Name = '"+ Name +"',Address = '"+ address +"',NIC = '"+NiC+"',Email = '"+ email +"',"
                            + "DOB = '"+ birDay +"',StaffPos = '"+ staffpos +"',workType = '"+ wrktype +"',regDate = '"+ startDate +"',qualific = '"+ qualific +"',"
                            + "Phone = '"+ phone +"' ,status = '"+status+"', Gender = '"+Gender+"' WHERE SID = '"+ SID +"'";
                    
                    pst = con.prepareStatement(q);
                    pst.execute();
                    
                    tableload();
                    
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);  
                    Logger.getLogger(StaffRegistration.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void NICKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NICKeyReleased
        if(Methods.validateNIC(NIC.getText()))
            jLabel25.setText("");
        else
            jLabel25.setText("Invalidate NIC Entered!");
        
        
         
        if(!jLabel25.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_NICKeyReleased

    private void NICKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NICKeyTyped
        if(Methods.validateNIC(NIC.getText()))
            jLabel25.setText("");
        else
            jLabel25.setText("Invalidate NIC Entered!");
        
        if(!jLabel25.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_NICKeyTyped

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed
    public void dateValidation(com.toedter.calendar.JDateChooser a, javax.swing.JLabel b){
        boolean valid = false;
        DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        Date Ndate = new Date();
        DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
        
        LocalDate localDate = Ndate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Date dOb = a.getDate();
        String dob = d.format(dOb);
        
        String cd = d.format(localDate);
        StringTokenizer st1 = new StringTokenizer(cd,"-");
        int arrCd[] = new int[3];
        int i=0;
        while(st1.hasMoreTokens()){
            arrCd[i]=Integer.parseInt(st1.nextToken());
            i++;
        }
        int []arrDob = new int[3];
        int j=0;
        StringTokenizer st2 = new StringTokenizer(dob,"-");
        while(st2.hasMoreTokens()){
            arrDob[i]=Integer.parseInt(st2.nextToken());
            j++;
        }
        
        
        if(arrDob[0]>arrCd[0])
            valid = false;
        else if(arrDob[1]>arrCd[1])
            valid = false;
        else if(arrDob[2]>arrCd[2])
            valid = false;
        else
            valid = true;
        if(valid)
            b.setText("");
        else
            b.setText("Invalid Date");
    
    
    if(!b.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    
    }
    private void DOBMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DOBMouseReleased
        dateValidation(DOB,jLabel14);
    }//GEN-LAST:event_DOBMouseReleased

    private void DOBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DOBMouseClicked
        
        
      
        
        DOB.getJCalendar().setMaxSelectableDate(new Date());
        dateValidation(DOB,jLabel14);
    }//GEN-LAST:event_DOBMouseClicked

    private void DOBKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DOBKeyTyped
       try {
            
            
            Date Ndate = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date d = sdf.parse(sdf.format(Ndate));
            
            
            
            
           
            
            
            if(DOB.getDate().after(d)){
                
                jLabel14.setText("Invalid Date");
            }else{
                jLabel14.setText("");
            
            
            }
                dateValidation(DOB,jLabel14);
                
                
        if(!jLabel14.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
        } catch (ParseException ex) {
           JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DOBKeyTyped

    private void DORKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DORKeyPressed
        dateValidation(DOR,jLabel17);
    }//GEN-LAST:event_DORKeyPressed

    private void DORMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DORMouseClicked
        dateValidation(DOR,jLabel17);
    }//GEN-LAST:event_DORMouseClicked

    private void DORKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DORKeyTyped
        try {
            SimpleDateFormat sm = new SimpleDateFormat("dd/MM/yyyy");
            Date Ndate = new Date();
            LocalDate localDate = Ndate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            sm.format(localDate);
            
//            if(DOR.getDate().after(daTe))
//                jLabel17.setText("Invalid Date");
//            else
//                jLabel17.setText("");
// 
            dateValidation(DOR,jLabel17);
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DORKeyTyped

    private void DOBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_DOBPropertyChange
        
    }//GEN-LAST:event_DOBPropertyChange

    private void DOBInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_DOBInputMethodTextChanged
        try {
            
            
            Date Ndate = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            Date d = sdf.parse(sdf.format(Ndate));
            
           
            
            
           
            
            
            if(DOB.getDate().after(d))
                jLabel14.setText("Invalid Date");
            else
                jLabel14.setText("");
            
            
            
                dateValidation(DOB,jLabel14);
        } catch (ParseException ex) {
           JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_DOBInputMethodTextChanged

    private void DOBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DOBKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_DOBKeyReleased

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
        if(!jLabel5.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
        
    }//GEN-LAST:event_nameKeyTyped

    private void AddressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddressKeyTyped
      
        if(jLabel13.getText().isEmpty())
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
         else
        {
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        
        }
    }//GEN-LAST:event_AddressKeyTyped

    private void EmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailKeyTyped
            EmailValidator emailValidator = new EmailValidator();
            if(!emailValidator.validate(Email.getText().trim())) 
                jLabel15.setText("Invalid Email!"); 
            else{
                jLabel15.setText(""); 

                 
        if(!jLabel15.getText().matches(""))
        {
        
            jButton1.setEnabled(false);
            jButton2.setEnabled(false);
        }
        else
        {
        
            jButton1.setEnabled(true);
            jButton2.setEnabled(true);
        }
       }
    }//GEN-LAST:event_EmailKeyTyped

    private void NICActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NICActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NICActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        name.setText("Hasith Kumara");
        Address.setText("Malabe,Colombo");
        NIC.setText("870228120v");
        DateFormat df = new SimpleDateFormat("MM/dd/yyyy");
        Date date = new Date();
        try {
            date = df.parse("02/02/1987");
        } catch (ParseException ex) {
            Logger.getLogger(StaffRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        DOB.setDate(date);
        DOR.setDate(new Date());
        
        
        
        
        Email.setText("hasithkumara@gmail.com");
        staffPos.setText("Cashier");
        gender.setSelectedIndex(1);
        contact.setText("0712211812");
        wType.setSelectedIndex(1);
        Qualifications.setText("Worked at a Restaurant for over 2 Years..");
    }//GEN-LAST:event_jButton5ActionPerformed
public class EmailValidator {

    private Pattern pattern;
    private Matcher matcher;

    private static final String EMAIL_PATTERN =  "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

    public EmailValidator() {
        pattern = Pattern.compile(EMAIL_PATTERN);
    }

    public boolean validate(final String hex) {

        matcher = pattern.matcher(hex);
        return matcher.matches();

    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Address;
    private com.toedter.calendar.JDateChooser DOB;
    private com.toedter.calendar.JDateChooser DOR;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField NIC;
    private javax.swing.JTextArea Qualifications;
    private javax.swing.JTextField contact;
    private javax.swing.JComboBox<String> gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField name;
    private javax.swing.JTextField staffPos;
    private javax.swing.JComboBox<String> wType;
    // End of variables declaration//GEN-END:variables
}
