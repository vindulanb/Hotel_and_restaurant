package StaffManagement;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

import java.sql.SQLException;
import java.text.MessageFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author P.Shashitha
 */
public class salaryReport extends javax.swing.JInternalFrame {
    Connection con = null;
    PreparedStatement pst =null;
    ResultSet rs = null;
    /**
     * Creates new form salaryReport
     */
    public salaryReport() {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
        con = StaffManagement.DbConnector.con();
        String sql1 = "SELECT SID, Name, StaffPos as 'Staff Position', Salary as 'Monthly Salary', payConfirmation as 'Confirmation', NIC FROM staff";
        tableload(sql1,jTable1);
        jTable1.setDefaultEditor(Object.class, null);
        jTable2.setDefaultEditor(Object.class, null);
        jTable3.setDefaultEditor(Object.class, null);
    }

    public void tableload(String sql,javax.swing.JTable a )
        {
            try 
            {
                //Implemnt request data...
                
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
            
                a.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            catch (Exception e) 
            {
                JOptionPane.showMessageDialog(this, "Given details Incorrect! ", "Not Found!", JOptionPane.OK_OPTION);
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Verify Salary Payment");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Staff"));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SID", "Name", "StaffPos", "Monthy Salary", "Confirmation"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Attendance"));

        jTable4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable4);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Salary Rates"));

        jTable2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Payroll"));

        jTable3.setAutoCreateRowSorter(true);
        jTable3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/report (2).png"))); // NOI18N
        jButton1.setText("Report");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/show view.png"))); // NOI18N
        jButton5.setText("֎Loads All Data");
        jButton5.setToolTipText("Reset Table!");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/remove.png"))); // NOI18N
        jButton6.setText("Delete!");
        jButton6.setToolTipText("Deletes Selected Rows");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addGap(80, 80, 80)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton5)
                    .addComponent(jButton6)))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("SID:");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Change Salary by:");

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setText("Reduce");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton8.setText("Add");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/calcilate.png"))); // NOI18N
        jButton4.setText("Calculate");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jCheckBox1.setText("Payment Confirmation");

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/select small.png"))); // NOI18N
        jButton2.setText("Change");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/StaffManagement/icon/search small2.png"))); // NOI18N
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Name:");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(449, 449, 449)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton7)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel7Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jButton4)
                                .addGap(70, 70, 70))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(jButton2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2)
                        .addGap(29, 29, 29)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3)
                        .addComponent(jLabel3))
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton8)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jCheckBox1)))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                                        .addGap(1067, 1067, 1067))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)))
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int []r;
        int sid = 0;
        String sql1;
        if(!jCheckBox1.isSelected()){
                    JOptionPane.showMessageDialog(this, "Mark!Accept confirm!", "Confirmation", JOptionPane.OK_OPTION);
        
        }
        else{
                r=jTable1.getSelectedRows();
                for(int i=0; i<r.length;i++)
                {
                    try {
                        
                        sid = Integer.parseInt(jTable1.getValueAt(r[i], 0).toString());
                        String str = jTable1.getValueAt(r[i], 4).toString();
                        Date Ndate = new Date();
                        LocalDate localDate = Ndate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                        String sql6;
                        int month = localDate.getMonthValue();
                        double salary = Double.parseDouble(jTable1.getValueAt(r[i], 3).toString());
                        double paid=salary;
                        if(str.matches("Not Confirmed"))
                        {
                            sql1 = "UPDATE staff SET payConfirmation = 'Confirmed' WHERE SID = '"+sid+"'";
                            sql6 = "UPDATE payroll SET MonthlySalary='"+salary+"',PaidAmount='"+paid+"' WHERE SID = '"+sid+"' and month = '"+month+"'";    
                        }
                        else
                        {
                            paid=0;
                            sql1 = "UPDATE staff SET payConfirmation = 'Not Confirmed' WHERE SID = '"+sid+"'";
                            sql6 = "UPDATE payroll SET MonthlySalary='"+salary+"',PaidAmount='"+paid+"' WHERE SID = '"+sid+"'and month = '"+month+"'";    
                        }
                        pst= con.prepareStatement(sql1);
                        pst.execute();
                        pst= con.prepareStatement(sql6);
                        pst.execute();
                        
                        sql1="SELECT SID, Name, StaffPos as 'Staff Position',"
                        + " Salary as 'Monthly Salary', payConfirmation as 'Confirmation' "
                        + "FROM staff";
                        tableload(sql1,jTable1);
                        String sql7 = "SELECT * FROM payroll";// WHERE SID ='"+sid+"'
                        tableload(sql7,jTable3);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage(), "Confirmation", JOptionPane.ERROR_MESSAGE);
                        Logger.getLogger(salaryReport.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
        
        
                
        }
        if(jTable3.getSelectedRowCount()>0){
        int sr = jTable3.getSelectedRow();
        double paid=0,salary =0;
        salary = Double.parseDouble(jTable3.getValueAt(sr, 2).toString());
        sid = Integer.parseInt(jTable3.getValueAt(sr, 1).toString());
        int payID =Integer.parseInt(jTable3.getValueAt(sr, 0).toString());
        String sql6="";
        if(Double.parseDouble(jTable3.getValueAt(sr, 3).toString())>0){
            
            sql6 = "UPDATE payroll SET MonthlySalary='"+salary+"',PaidAmount='"+paid+"' WHERE SID = '"+sid+"' AND payrollID = '"+payID+"'";    
            
              
        
        
        }else if(Double.parseDouble(jTable3.getValueAt(sr, 3).toString())==0){
            paid=salary;
            sql6 = "UPDATE payroll SET MonthlySalary='"+salary+"',PaidAmount='"+paid+"' WHERE SID = '"+sid+"' AND payrollID = '"+payID+"'";
         
            
        }
        try {
                pst = con.prepareStatement(sql6);
                pst.execute(sql6);
                
                String sql7 = "SELECT * FROM payroll";// WHERE SID ='"+sid+"'
                tableload(sql7,jTable3);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Confirmation", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

     public void printTable(javax.swing.JTable a, String Title){
                    MessageFormat header = new MessageFormat("'"+Title+"'");
                    MessageFormat footer = new MessageFormat("page{0,number,integer}");
                    try{
                        a.print(JTable.PrintMode.NORMAL, header, footer);
                        
                    }catch(java.awt.print.PrinterException e){
                        System.err.format("Error Printing ! %s%n",e.getMessage());
                    }
    
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         printTable(jTable3,"Payroll Backup");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int sid = Integer.parseInt(jTextField1.getText());
        String name = jTextField2.getText();
        String sql1="";
        if(!jTextField1.getText().isEmpty()){
            if(!jTextField2.getText().isEmpty()){
                sql1="SELECT SID, Name, StaffPos as 'Staff Position',"
                        + " Salary as 'Monthly Salary', payConfirmation as 'Confirmation', NIC "
                        + "FROM staff WHERE SID ='"+sid+"' AND Name = '"+name+"'";
            }
            else
                sql1="SELECT SID, Name, StaffPos as 'Staff Position',"
                        + " Salary as 'Monthly Salary', payConfirmation as 'Confirmation', NIC "
                        + "FROM staff WHERE SID ='"+sid+"'";
            tableload(sql1,jTable1);
        }else
                    JOptionPane.showMessageDialog(this, "Mandotory Fields Not Completed! ", "Assignment Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int r[] = jTable1.getSelectedRows();
        int srow =jTable1.getSelectedRow();
        double salary=0;
        double paid = 0;
        
        int sid,rc,rc2,sleaveCount=0,wcount=0,hdcount=0,OT=0,a=0,nleaveCount=0;
        String attnd, leave, wtype; 
//        for(int i=0;i<r.length;i++)
//        {
            
            if(!jTextField1.getText().isEmpty())
                {
                try {
                    sid = Integer.parseInt(jTable1.getValueAt(srow, 0).toString());
                    String name = jTable1.getValueAt(srow, 1).toString();
                    String Spos = jTable1.getValueAt(srow, 2).toString();
                    String NIC = jTable1.getValueAt(srow, 5).toString();
                    Date Ndate = new Date();
                    LocalDate localDate = Ndate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    
                    int month = localDate.getMonthValue();
                    int year = localDate.getYear();
                    
//                    if(month ==1)
//                        month = 12;
//                    else
//                        month = month-1;
//                    
                    
                    
                    
                    String sql2 = "SELECT * FROM attendance WHERE Name = '"+name+"' and Date LIKE '%"+month+"/"+year+"'";
                    tableload(sql2,jTable4);
                    
                    rc2 = jTable4.getRowCount();
                    
                    int htotal=0;
                    int c = 0;
                    int d = 0;
                    for(int j=0; j<rc2; j++){
                        int b = Integer.parseInt(jTable4.getValueAt(j,5).toString());
                        htotal +=b;
                        attnd = jTable4.getValueAt(j,2).toString();
                        if(attnd.compareTo("Attended")==0)
                        {
                            leave =  jTable4.getValueAt(j,6).toString();
                            if(leave.compareTo("||| Sick Leave |||")==0)
                                sleaveCount++;//sick leave count
                            if(!leave.contains("||| No Pay Leave |||" )){
                                
                                
                                wtype= jTable4.getValueAt(j,3).toString();
                                System.out.println(leave);
                                if(wtype.contains("Full Time"))
                                    wcount++;
                                else if(wtype.contains("Half-Time"))
                                    hdcount++;
                                
                            }
                            if(leave.contains("||| No Pay Leave |||" )){
                                nleaveCount++;
                                wtype= jTable4.getValueAt(j,3).toString();
                                if(wtype.contains("Full Time")){
                                    c++;
                                    
                                    System.out.println("Count: "+c+"\n\n\n");
                                }
                                else if(wtype.contains("Half-Time")){
                                    d++;
                                }
                            }
                            if(leave.contains("No Leave" )){
                                a=Integer.parseInt(jTable4.getValueAt(j, 8).toString());
                                OT =OT +a;
                                
                            }
                            
                        }
                    }
                        String sql3 = "SELECT * FROM salaryrates WHERE StaffPos = '"+Spos+"'";
                        tableload(sql3,jTable2);
                        String worktype; 
                        double HrRate=0; 
                        double OTRate=0; 
                        double WRate=0; 
                        double HTRate=0;
                        double Red=0; 
                        int nopay=0; 
                        int anualleave; 
                        try{
                                worktype = jTable2.getValueAt(0, 1).toString();
                                HrRate = Double.parseDouble(jTable2.getValueAt(0, 2).toString());
                                OTRate = Double.parseDouble(jTable2.getValueAt(0, 4).toString());
                                WRate = Double.parseDouble(jTable2.getValueAt(0, 5).toString());
                                HTRate = Double.parseDouble(jTable2.getValueAt(0, 7).toString());
                                Red = Double.parseDouble(jTable2.getValueAt(0, 8).toString());
                                nopay = Integer.parseInt(jTable2.getValueAt(0, 3).toString());
                                anualleave = Integer.parseInt(jTable2.getValueAt(0, 3).toString());
                        }catch(Exception e)
                        {
                            JOptionPane.showMessageDialog(this, "Salary Rates Not Assigned For: "+Spos, "Error!", JOptionPane.ERROR_MESSAGE);
                        }
                        double wsalary=0;
                        wsalary = wcount*WRate + hdcount*HTRate  - c*WRate -d*HTRate;
                        System.out.println("Working :"+wsalary);
                        double hsalary=0;
                        hsalary = HrRate*htotal;
                        System.out.println("Hourly :"+hsalary);
                        double nsalary=0;
                        if(nopay<nleaveCount){
                            nsalary = Red*(nleaveCount-nopay);
                        }
                        System.out.println("No Pay :"+nsalary);
                        
                        salary = wsalary+hsalary-nsalary+ OT*OTRate;
                        System.out.println("salary :"+salary);
                        
                        String sql4= "UPDATE staff SET Salary = '"+salary+"' WHERE Name = '"+name+"' OR SID = '"+sid+"'";
                        

                            pst = con.prepareStatement(sql4);
                            pst.execute(sql4);
                               
                        
                    
                   
                    try{
                        if(Double.parseDouble(jTable1.getValueAt(srow, 3).toString())>=0 | jTable1.getValueAt(srow, 3) == null){
                            
                            String sql6 = "INSERT INTO payroll(SID,MonthlySalary,PaidAmount,month,NIC) VALUES ('"+sid+"','"+salary+"','"+paid+"','"+month+"','"+NIC+"')";
                            pst = con.prepareStatement(sql6);
                            pst.execute(sql6);
                        }
                    }
                    catch(SQLException e){
                        
                          String sql6 = "UPDATE payroll SET MonthlySalary='"+salary+"',PaidAmount='"+paid+"', NIC = '"+NIC+"' WHERE SID = '"+sid+"' AND month = '"+month+"'";  
                          
                        pst = con.prepareStatement(sql6);
                        pst.execute(sql6);  
                            
                    }
                    String sql7 = "SELECT * FROM payroll ";//WHERE SID ='"+sid+"'
                    tableload(sql7,jTable3);
                    
                    String sql9 = "SELECT SID, Name, StaffPos as 'Staff Position', Salary as 'Monthly Salary', payConfirmation as 'Confirmation', NIC FROM staff";
                    tableload(sql9,jTable1);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Exception: "+ ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
                }
                }else{
                    JOptionPane.showMessageDialog(this, "Mandotory Fields Not Completed! ", "Assignment Error", JOptionPane.ERROR_MESSAGE);    }//GEN-LAST:event_jButton4ActionPerformed
        }
//    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        jButton4.setEnabled(true);
        int r[] = jTable1.getSelectedRows();
        int Sid=0;
        String name;
        String a = "";
        String b = "";
        if(r.length>1){
            a="";b="";
        for(int i=0;i<r.length;i++){
        
        
        
        Sid = Integer.parseInt(jTable1.getValueAt(r[i], 0).toString());
        name = jTable1.getValueAt(r[i], 1).toString();
        
        a = a+name+", ";
        b = b+Sid+", ";
              
        
        }
        jTextField1.setText(b);
        jTextField2.setText(a);
        }else if(r.length==1)
            Sid = Integer.parseInt(jTable1.getValueAt(r[0], 0).toString());
            name = jTable1.getValueAt(r[0], 1).toString();
            jTextField1.setText(""+Sid);
            jTextField2.setText(name);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String sql1 = "SELECT SID, Name, StaffPos as 'Staff Position', Salary as 'Monthly Salary', payConfirmation as 'Confirmation' FROM staff";
        tableload(sql1,jTable1);
        
        String sql2 = "SELECT * FROM salaryrates";
        tableload(sql2,jTable2);
        
        String sql3 = "SELECT * FROM payroll";
        tableload(sql3,jTable3);
        
         String sql4 = "SELECT * FROM attendance";
        tableload(sql4,jTable4);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int r[] = jTable3.getSelectedRows();
        for(int i=0;i<r.length;i++){
            int sid = Integer.parseInt(jTable3.getValueAt(r[i], 1).toString());
            int payID = Integer.parseInt(jTable3.getValueAt(r[i], 0).toString());
                String sql1 = "DELETE FROM payroll WHERE SID = '"+sid+"' AND payrollID = '"+payID+"'";
            try {
                pst = con.prepareStatement(sql1);
                pst.execute(sql1);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Exception: "+ ex.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
            }
                        
        
        }
        String sql7 = "SELECT * FROM payroll";
        tableload(sql7,jTable3);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        try{
        Double reduction = Double.parseDouble(jTextField3.getText().toString());
        int r = jTable1.getSelectedRow();
        double salary;
        int sid = Integer.parseInt(jTable1.getValueAt(r, 0).toString());
        salary = Double.parseDouble(jTable1.getValueAt(r, 3).toString())-reduction;
        String sql6 = "UPDATE staff SET Salary='"+salary+"' WHERE SID = '"+sid+"'";    
        try {
            pst = con.prepareStatement(sql6);
            pst.execute(sql6);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);                                           
        }
                        
        String sql7 = "UPDATE payroll SET MonthlySalary='"+salary+"' WHERE SID = '"+sid+"'";    
        try {
            pst = con.prepareStatement(sql7);
            pst.execute(sql7);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);                                            
        }
        
        String sql8 = "SELECT * FROM payroll";
        tableload(sql8,jTable1);
        
        String sql9 = "SELECT SID, Name, StaffPos as 'Staff Position', Salary as 'Monthly Salary', payConfirmation as 'Confirmation' FROM staff";
        tableload(sql9,jTable1);
        }
       catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, e.getMessage()+"   :Enter an numerical value!", "Error", JOptionPane.ERROR_MESSAGE);
       }
       catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage()+"   :Select a Row..", "Error", JOptionPane.ERROR_MESSAGE);       }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
       try{
        double sum = Double.parseDouble(jTextField3.getText().toString());
        int r = jTable1.getSelectedRow();
        double salary;
        int sid = Integer.parseInt(jTable1.getValueAt(r, 0).toString());
        salary = Double.parseDouble(jTable1.getValueAt(r, 3).toString())+sum;
        String sql6 = "UPDATE staff SET Salary='"+salary+"' WHERE SID = '"+sid+"'";    
        try {
            pst = con.prepareStatement(sql6);
            pst.execute(sql6);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);                                           
        }
                        
        String sql7 = "UPDATE payroll SET MonthlySalary='"+salary+"' WHERE SID = '"+sid+"'";    
        try {
            pst = con.prepareStatement(sql7);
            pst.execute(sql7);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);                                            
        }
        
        String sql8 = "SELECT * FROM payroll";
        tableload(sql8,jTable1);
        
        String sql9 = "SELECT SID, Name, StaffPos as 'Staff Position', Salary as 'Monthly Salary', payConfirmation as 'Confirmation' FROM staff";
        tableload(sql9,jTable1);
       }
       catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, e.getMessage()+"   :Select a Row..", "Error", JOptionPane.ERROR_MESSAGE);
       }
       catch(Exception e){
            JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
       }
    }//GEN-LAST:event_jButton8ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
