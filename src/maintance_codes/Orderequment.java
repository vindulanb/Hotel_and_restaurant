/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package maintance_codes;

//import maintance.hadaling.Maintance;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import MyCodes.DbConnect;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Date;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Manjula Kumara
 */
public class Orderequment extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    /**
     * Creates new form Orderequment
     */
    public Orderequment() {
        initComponents();
        setExtendedState(java.awt.Frame.MAXIMIZED_BOTH);
        con = DbConnect.connect();
        String sql3 = "SELECT * FROM maintanceorder";
        tableload(sql3);
    }

    
        public void tableload(String sql)
        {
            try 
            {
                //Implemnt request data...
                
                pst = con.prepareStatement(sql);
                rs = pst.executeQuery();
            
                jTable2.setModel(DbUtils.resultSetToTableModel(rs));
            }
            
            catch (Exception e) 
            {
                System.out.println(e);
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        reqID = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        recvdDate = new com.toedter.calendar.JDateChooser();
        Confirmation = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Orderrequest = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        jButton2.setText("jButton2");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/icons8-purchase-order-50.png"))); // NOI18N
        jLabel1.setText("Order Equipment Handling");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Order request");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order request", "Conformation(Yes/No)", "sent date", "Recevied date", "Order request id"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable2MouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Order request id");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Conformation(Y/N)");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Sent date");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Recevied date");

        reqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqIDActionPerformed(evt);
            }
        });
        reqID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reqIDKeyReleased(evt);
            }
        });

        jDateChooser1.setDateFormatString("yyyy/MM/dd");
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        recvdDate.setDateFormatString("yyyy/MM/dd");
        recvdDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                recvdDatePropertyChange(evt);
            }
        });

        Confirmation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Confirmation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Search");

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Orderrequest", "Inbox", "Orderrequestid" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(Confirmation, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(reqID)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(recvdDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox2, 0, 150, Short.MAX_VALUE))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reqID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirmation, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(recvdDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        reqID.getAccessibleContext().setAccessibleDescription("");

        jLabel7.setForeground(new java.awt.Color(255, 51, 51));

        Orderrequest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Orderrequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Equipment", "Quantity"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(Orderrequest);

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/add row.png"))); // NOI18N
        jButton7.setText("AddRow");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/icons8-delete-row-32.png"))); // NOI18N
        jButton8.setText("RemoveRow");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/add small.png"))); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/delete small.png"))); // NOI18N
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/update small.png"))); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/clear small.png"))); // NOI18N
        jButton6.setText("Clear");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/Search small.png"))); // NOI18N
        jButton5.setText("search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/graph small2.png"))); // NOI18N
        jButton9.setText("Graph");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maintance_codes/icon/report small.png"))); // NOI18N
        jButton10.setText("Report");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton11.setText("Demo");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(188, 188, 188)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(409, 409, 409)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(118, 118, 118)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)))))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            
            if(reqID.getText().isEmpty() || (jDateChooser1.getDate()==null) || (recvdDate.getDate()==null) ) {
            JOptionPane.showMessageDialog(this,"Text field are empty","fill the text field",JOptionPane.ERROR_MESSAGE);
        }
        else {
            int reqid = Integer.parseInt(reqID.getText());
            String confirmation = Confirmation.getSelectedItem().toString();
            String recievedDate = "";
            String sentdate = "";
            DateFormat d = new SimpleDateFormat("yyyy/MM/dd"); 
            
            try{
                recievedDate = d.format(recvdDate.getDate());
            }catch(NullPointerException e){
            
                recievedDate = "";// resolves nullpointerexception for getDate method
                
            
            }
           
            //String orderrequest = Orderrequest.getText();
            
            String orderrequest ="";
            String equipment ="";
            String quantity="";
            int rcount= Orderrequest.getRowCount();
            int i =0;
            try{
            if(rcount >0){
            
                equipment = Orderrequest.getValueAt(0, 0).toString();
            System.out.println(equipment);
            quantity = Orderrequest.getValueAt(0, 1).toString();
            System.out.println(quantity);

               orderrequest =""+equipment+" = "+quantity+"";
            i++;
            
            
            while(i<rcount){
                    equipment = Orderrequest.getValueAt(i, 0).toString();
            
                    quantity = Orderrequest.getValueAt(i, 1).toString();
            
                orderrequest =orderrequest+","+equipment+" = "+quantity+"";
                i++;
  
                }
            
             
              
            
            }
            }catch(Exception e){
               i=0;
//                rcount = Orderrequest.getRowCount();
//                 int ed= Orderrequest.getEditingRow();
//                 equipment= Orderrequest.getValueAt(ed, 0).toString();
//                 quantity = Integer.parseInt(Orderrequest.getValueAt(ed, 1).toString());
//                 
//                 orderrequest =""+equipment+" = "+quantity+"";
//                 
//                 while(i<rcount){
//                    equipment = Orderrequest.getValueAt(i, 0).toString();
//            
//                    quantity = Integer.parseInt(Orderrequest.getValueAt(i, 1).toString());
//            
//                     orderrequest =orderrequest+","+equipment+" = "+quantity+"";
//                    i++;
//  
//                }
                 
            
            }
            
            
            
            try {
                try{
                    sentdate = d.format(jDateChooser1.getDate());
                }catch(Exception e){
                    JOptionPane.showMessageDialog(this, "Sent Date Empty", "Exception!", JOptionPane.ERROR_MESSAGE); 
                }
                String sql1 ="";
            if(orderrequest.isEmpty())
                sql1="";
            else{
             sql1 = "INSERT INTO maintanceorder(Orderrequest,Inbox,Sentdate,RecievedDate,Orderrequestid) VALUES "
                    + "  ('"+orderrequest+"', '"+confirmation+"', '"+sentdate+"','"+recievedDate+"','"+reqid+"')";
        
            pst = con.prepareStatement(sql1);
            pst.execute();
            String sql3 = "SELECT * FROM maintanceorder";
            tableload(sql3);
            }
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE); 
        }
       }       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int x = JOptionPane.showConfirmDialog( null,"Do you want to delete it");
        if(x==0) {
        
        int r =jTable2.getSelectedRow();
        int rid =  Integer.parseInt(jTable2.getValueAt(r, 4).toString());
        String sql2 = "DELETE FROM maintanceorder WHERE Orderrequestid = '"+rid+"'";
        try {
            pst = con.prepareStatement(sql2);
            pst.execute();
            String sql3 = "SELECT * FROM maintanceorder";
            tableload(sql3);
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage(), "Exception!", JOptionPane.ERROR_MESSAGE); 
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       int x =JOptionPane.showConfirmDialog(null,"Do you really want to update");
     if(x==0)
     
     {
        
        
        int r = jTable2.getSelectedRow();
        int rid=Integer.parseInt(jTable2.getValueAt(r, 4).toString());
        int nrid = Integer.parseInt(reqID.getText());
        String confirmation = Confirmation.getSelectedItem().toString();
            
        DateFormat d = new SimpleDateFormat("yyyy/MM/dd"); 
        String sentdate = d.format(jDateChooser1.getDate());
            
        String recievedDate = d.format(recvdDate.getDate());
            
         String orderrequest ="";
            String equipment ="";
            String quantity="";
            int rcount= Orderrequest.getRowCount();
            int i =0;
            try{
                System.out.println("dgdghdh:::"+rcount);
            if(rcount >0){
                
            
            equipment = Orderrequest.getValueAt(0, 0).toString();
            System.out.println(equipment);
            quantity = Orderrequest.getValueAt(0, 1).toString();
            System.out.println(quantity);

               orderrequest =""+equipment+" = "+quantity+"";
                System.out.println(orderrequest);
            i++;
            
            
            while(i<rcount){
                    equipment = Orderrequest.getValueAt(i, 0).toString();
            
                    quantity = Orderrequest.getValueAt(i, 1).toString();
            
                orderrequest =orderrequest+","+equipment+" = "+quantity+"";
                System.out.println(orderrequest);
                i++;
  
                }
            
             
              
            
            }
            }catch(Exception e){
               i=0;

                 
            
            }
            
            
        
        
        String sql4 = "UPDATE maintanceorder SET Orderrequest = '"+orderrequest+"',Inbox = '"+confirmation+"',Sentdate = '"+sentdate+"',RecievedDate = '"+recievedDate+"',Orderrequestid = '"+nrid+"' WHERE Orderrequestid = '"+rid+"'";
        try {
            pst = con.prepareStatement(sql4);
            pst.execute();
            String sql3 = "SELECT * FROM maintanceorder";
            tableload(sql3);
        } catch (SQLException ex) {
            Logger.getLogger(Orderequment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       //Search button
        String search = jTextField1.getText();
        String selected = jComboBox2.getSelectedItem().toString();
        System.out.println(search+" -  "+selected);
        String sql = "SELECT `Orderrequest`, `Inbox`, `Sentdate`,"
                + " `RecievedDate`, `Orderrequestid`"
                + "FROM `maintanceorder` "
                + "WHERE "+ selected +" = '"+ search +" '";
        tableload(sql);
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        //mouse click event
        final int rcca =Orderrequest.getRowCount();
         DefaultTableModel model = (DefaultTableModel) Orderrequest.getModel();
        for(int j=Orderrequest.getRowCount()-1; j>=0;j--){
         model.removeRow(j);
        }
        for(int j=0;j<rcca;j++)
        model.addRow(new Object[]{"", ""});
         
        int r = jTable2.getSelectedRow();
        String orderrequest = jTable2.getValueAt(r, 0).toString();
        String conformation = jTable2.getValueAt(r, 1).toString();
        String sentdate= jTable2.getValueAt(r, 2).toString();
        String recevieddate = jTable2.getValueAt(r, 3).toString();
        String orderid = jTable2.getValueAt(r, 4).toString();
       
        int i=0;
        String row;
        String column1,column2;
        
        StringTokenizer st1 = new StringTokenizer(orderrequest,",");
        int rtk = st1.countTokens();
        System.out.println(st1.countTokens());
        if(Orderrequest.getRowCount()>=rtk)
        while(st1.hasMoreTokens()){
        
            row = st1.nextToken();
            StringTokenizer st2 = new StringTokenizer(row,"=");
            int rcc = Orderrequest.getRowCount();
            while(st2.hasMoreTokens()){
               
                Orderrequest.setValueAt(st2.nextElement(), i, 0);
                Orderrequest.setValueAt(st2.nextToken(), i, 1);
                rcc--;
               
               
            }
            
        i++;
        }
        else{
                   JOptionPane.showMessageDialog(this,"Not Enough Rows in Table","Add Exactly '"+rtk+"' Rows",JOptionPane.ERROR_MESSAGE);
                   
               }
//        else{
//            StringTokenizer st2 = new StringTokenizer(orderrequest,"=");
//            System.out.println(st2.countTokens());
//            while(st2.hasMoreElements()){
//                Orderrequest.setValueAt(st2.nextElement(), i, 0);
//                Orderrequest.setValueAt(st2.nextToken(), i, 1);
//                
//            }
//        }
        
        Confirmation.setSelectedItem(conformation);
        //jTextField3.setText(sentdate);
        reqID.setText(orderid);
        sentdate = sentdate.replace('-', '/');
        recevieddate = recevieddate.replace('-', '/');
        Date date1 = null;
        Date date2 = null;
        try {  
             date1 = new SimpleDateFormat("yyyy/MM/dd").parse(sentdate);
             date2 = new SimpleDateFormat("yyyy/MM/dd").parse(recevieddate);
        } catch (ParseException ex) {
            //Logger.getLogger(Loan.class.getName()).log(Level.SEVERE, null, ex);
        }
        jDateChooser1.setDate(date1);
        recvdDate.setDate(date2);
        
       /* DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            
          
        
         try {
             jDateChooser1.setDate(df.parse(sentdate));
             recvdDate.setDate(df.parse(recevieddate));
         } catch (ParseException ex) {
             JOptionPane.showMessageDialog(this, ex.getMessage(), "Error",JOptionPane.ERROR_MESSAGE);
         }*/
        
        
        
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Refresh 
        final int rcc =Orderrequest.getRowCount();
         DefaultTableModel model = (DefaultTableModel) Orderrequest.getModel();
        for(int i=Orderrequest.getRowCount()-1; i>=0;i--){
         model.removeRow(i);
        
        }
        for(int i=0;i<rcc;i++)
        model.addRow(new Object[]{"", ""});
        reqID.setText("");
         Date d = new Date();
        jDateChooser1.setDate(d);
        recvdDate.setDate(d);
        //Confirmation1.setText("");
        //jDateChooser1.setText("");
        String sql3 = "SELECT * FROM maintanceorder";
         tableload(sql3);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        
        ((JTextField)jDateChooser1.getDateEditor().getUiComponent()).setEditable(false); //set editable false in  date chooser via typing
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void recvdDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_recvdDatePropertyChange
        
        ((JTextField)recvdDate.getDateEditor().getUiComponent()).setEditable(false); //set editable false in  date chooser via typing
    }//GEN-LAST:event_recvdDatePropertyChange

    private void reqIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reqIDKeyReleased
                if(!reqID.getText().matches("[0-9]+"))  
        jLabel7.setText("Error!");
        else if(reqID.getText().matches(" "))
          jLabel7.setText("Required id nu !");  
        else
             jLabel7.setText("");
    }//GEN-LAST:event_reqIDKeyReleased

    private void reqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reqIDActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        DefaultTableModel model = (DefaultTableModel) Orderrequest.getModel();
        model.addRow(new Object[]{"", ""});
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        DefaultTableModel model = (DefaultTableModel) Orderrequest.getModel();
        model.removeRow(Orderrequest.getRowCount()-1);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
       int c = jTable2.getRowCount();
        if (c > 0)
        {
            
           
            genGraph(jTable2, "Analysing Order Equment Conformation", " Conformatin (Yes/No)",1);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

     public void genGraph(javax.swing.JTable a, String b, String c,int n){
                int sr,rc;
                String Name; 
                sr = a.getRowCount();
                
   
                    DefaultPieDataset dataset = new DefaultPieDataset();
 
                            
                        for(int i=0;i<sr;i++)
                        {
                        
                            Name=a.getValueAt(i, n).toString();

                            int count=0;
                            for(int j=0;j<sr;j++){
                                if(a.getValueAt(j, n).toString().equals(Name))
                                    count++;
                                
                            }
                            
                            System.out.println(count);
                            dataset.setValue ("'"+Name+"'", new Integer (count));
                        }
                
                

 
                    JFreeChart chart = ChartFactory.createPieChart("'"+b+"'", dataset, true, true, true);
 
                    ChartFrame yourFrame = new ChartFrame ("'"+c+"'", chart);
 
                    yourFrame.setSize(600, 600);
 
                    yourFrame.setVisible(true);
            
    }





    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        int c = jTable2.getRowCount();
        if (c > 0)
        {
            
           
            genGraph(jTable2, "Analysing Order Equment Conformation", " Order Equment Conformation (Yes/No) ",1);
        }
        
    }                                        

    
    public void GenReport(javax.swing.JTable a, String repTitle, String tabTitle, String FileName){
        try{
            
            
            
                        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
                            jfc.setDialogTitle("Choose a directory to save your file: ");
                            jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

                            int returnValue = jfc.showSaveDialog(null);
                        if (returnValue == JFileChooser.APPROVE_OPTION) {
                            if (jfc.getSelectedFile().isDirectory()) {
				System.out.println("You selected the directory: " + jfc.getSelectedFile());
                            }
                        }
            
            
                        int sr = a.getRowCount();
                        int cc = a.getColumnCount();
                        Document document = new Document();
                        PdfWriter.getInstance(document, new FileOutputStream(""+jfc.getSelectedFile()+"\\"+FileName+""));//"//Report.pdf"
                        document.open();
                        Image image = Image.getInstance("src\\hotelandrestaurant\\icon\\orderreport.png");//Image path
                        document.add(new Paragraph(""));//Image title
                        document.add(image);
                        
                        document.add(new Paragraph("'"+repTitle+"'",FontFactory.getFont(FontFactory.TIMES_BOLD, 18, Font.BOLD)));
                        document.add(new Paragraph(new Date().toString()));
                        document.add(new Paragraph("------------------------------------------------------------------------------------------------------"));
                        PdfPTable table = new PdfPTable(cc);
                        
                        PdfPCell cell = new PdfPCell(new Paragraph("'"+tabTitle+"'"));
                        cell .setColspan(cc);
                        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                        cell.setBackgroundColor(BaseColor.GREEN);
                        table.addCell(cell);
                        for(int i=0;i<a.getColumnCount();i++){
                            
                            PdfPCell cellCol = new PdfPCell(new Paragraph(a.getColumnName(i),FontFactory.getFont(FontFactory.TIMES_BOLD, 10, Font.BOLD)));
                            cellCol.setColspan(1);
                            cellCol.setHorizontalAlignment(Element.ALIGN_CENTER);
                            
                            table.addCell(cellCol);
   
                        }
                        if(sr>0)
                            for(int i=0;i<sr;i++){
                                
                                for(int j=0;j<cc;j++)   
                                    if(a.getValueAt(i, j)!=null)
                                        table.addCell(new Paragraph(a.getValueAt(i, j).toString(),FontFactory.getFont(FontFactory.TIMES_BOLD, 8, Font.NORMAL)));
                                    else
                                        table.addCell(" ");

                            }
       
                        document.add(table);
                        document.close();
                        JOptionPane.showMessageDialog(null,"Report Saved");
                    
                        try{
                            
                            

                            JFileChooser jfch = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());

                            returnValue = jfch.showOpenDialog(null);
                            // int returnValue = jfc.showSaveDialog(null);

                            if (returnValue == JFileChooser.APPROVE_OPTION) {
                                File selectedFile = jfch.getSelectedFile();
                                System.out.println(selectedFile.getAbsolutePath());
                            
                            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+
                                    ""+selectedFile.getAbsolutePath()+"");//"//"+FileName+
                            
                             FileInputStream in = new FileInputStream(""+selectedFile.getAbsolutePath()+"");
                             Doc doc = new SimpleDoc(in, DocFlavor.INPUT_STREAM.AUTOSENSE, null);
                             PrintService service = PrintServiceLookup.lookupDefaultPrintService();

                                try {
                                        service.createPrintJob().print(doc, null);
                                } catch (PrintException e) {
                                        e.printStackTrace();
                                }
                            }
                        }catch(Exception ex){
                            
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    
        }catch(Exception ex){
                
                         JOptionPane.showMessageDialog(null, ex);
        }
    }

    
    
    
    
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       GenReport(jTable2, "Order Equiment Details", "Order Equiment ", "ReportOrder_Equiment.pdf");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTable2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseEntered

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
     reqID.setText("100");
    }//GEN-LAST:event_jButton11ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orderequment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orderequment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orderequment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orderequment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orderequment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Confirmation;
    private javax.swing.JTable Orderrequest;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private com.toedter.calendar.JDateChooser recvdDate;
    private javax.swing.JTextField reqID;
    // End of variables declaration//GEN-END:variables
}
