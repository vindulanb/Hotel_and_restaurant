package Delivery;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;


import java.awt.HeadlessException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SUJITH
 */
public class Buyers extends javax.swing.JFrame {

    /**
     * Creates new form Buyers
     *
     */
    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public Buyers() {
        initComponents();

        conn = Dbconnecter.con();
        buyer_id();
           buyer_table_load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField_BuyerID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_Name = new javax.swing.JTextField();
        jTextField_OwnerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Address = new javax.swing.JTextField();
        jTextField_Phone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Buyer = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButton_ADD = new javax.swing.JButton();
        jButton_DELETE = new javax.swing.JButton();
        jButton_UPDATE = new javax.swing.JButton();
        jButton_SEARCH = new javax.swing.JButton();
        jButton_CLEAR = new javax.swing.JButton();
        jButton_PRINT = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1_DEmo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextField_BuyerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_BuyerIDActionPerformed(evt);
            }
        });
        jTextField_BuyerID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_BuyerIDKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Buyer ID");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Shop Name");

        jTextField_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_NameActionPerformed(evt);
            }
        });
        jTextField_Name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_NameKeyPressed(evt);
            }
        });

        jTextField_OwnerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_OwnerNameActionPerformed(evt);
            }
        });
        jTextField_OwnerName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_OwnerNameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Owner Name");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Address");

        jTextField_Phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_PhoneKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Phone");

        jTable_Buyer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Buye ID", "Name", "Owner Name", "Address", "Phone"
            }
        ));
        jTable_Buyer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_BuyerMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Buyer);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton_ADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_ADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/Add buyer.png"))); // NOI18N
        jButton_ADD.setText("Add");
        jButton_ADD.setActionCommand("Add ");
        jButton_ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ADDActionPerformed(evt);
            }
        });

        jButton_DELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_DELETE.setForeground(new java.awt.Color(255, 0, 0));
        jButton_DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/delete.png"))); // NOI18N
        jButton_DELETE.setText("Delete");
        jButton_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DELETEActionPerformed(evt);
            }
        });

        jButton_UPDATE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/update.png"))); // NOI18N
        jButton_UPDATE.setText("Update");
        jButton_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UPDATEActionPerformed(evt);
            }
        });

        jButton_SEARCH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_SEARCH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/search.png"))); // NOI18N
        jButton_SEARCH.setText("Search");
        jButton_SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SEARCHActionPerformed(evt);
            }
        });

        jButton_CLEAR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_CLEAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/clear button.png"))); // NOI18N
        jButton_CLEAR.setText("Clear");
        jButton_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CLEARActionPerformed(evt);
            }
        });

        jButton_PRINT.setBackground(new java.awt.Color(153, 204, 255));
        jButton_PRINT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_PRINT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/report (2).png"))); // NOI18N
        jButton_PRINT.setText("Report");
        jButton_PRINT.setToolTipText("Update food details");
        jButton_PRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PRINTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_ADD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_DELETE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_UPDATE, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jButton_SEARCH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_CLEAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_PRINT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jButton_UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_SEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_PRINT, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/Add buyer.png"))); // NOI18N
        jLabel6.setText("ADD BUYERS");

        jButton1_DEmo.setText("Demo");
        jButton1_DEmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_DEmoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField_Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_OwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField_BuyerID, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1_DEmo)
                        .addContainerGap(191, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_BuyerID, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_OwnerName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextField_Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton1_DEmo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CLEARActionPerformed
        // TODO add your handling code here:
        fieldClear__buyer();
    }//GEN-LAST:event_jButton_CLEARActionPerformed

    private void jButton_ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ADDActionPerformed
        // TODO add your handling code here:  
//        boolean i = Validation.isValidPhoneNo(jTextField_Phone.getText());
        if (Validation_buyer()) {
//            if (i) {
//                
//            } else{
//            JOptionPane.showMessageDialog(this, "Please enter valid input for phone number of owner ", "Error Message", JOptionPane.ERROR_MESSAGE);
//           
//            }

        } else {
            saveUser_buyer();
                      buyer_id();
        }


    }//GEN-LAST:event_jButton_ADDActionPerformed

    private void jTable_BuyerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_BuyerMouseClicked
        // TODO add your handling code here:
        int row = jTable_Buyer.getSelectedRow();

        String Buyer_ID = jTable_Buyer.getValueAt(row, 0).toString();
        String Name = jTable_Buyer.getValueAt(row, 1).toString();
        String Owner_Name = jTable_Buyer.getValueAt(row, 2).toString();
        String Address = jTable_Buyer.getValueAt(row, 3).toString();
        String Phone = jTable_Buyer.getValueAt(row, 4).toString();

        jTextField_BuyerID.setText(Buyer_ID);
        jTextField_Name.setText(Name);
        jTextField_OwnerName.setText(Owner_Name);
        jTextField_Address.setText(Address);
        jTextField_Phone.setText(Phone);

    }//GEN-LAST:event_jTable_BuyerMouseClicked

    private void jTextField_BuyerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_BuyerIDActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField_BuyerIDActionPerformed

    private void jButton_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DELETEActionPerformed
        // TODO add your handling code here:

        int x = JOptionPane.showConfirmDialog(null, "Do You Really Want to Delete this records?");

        if (x == 0) {
            String id = jTextField_BuyerID.getText();

            if (id.equals(jTextField_BuyerID.getText())) {
                String sql = "DELETE FROM buyers WHERE Buyer_ID = '" + id + "'";

                try {
                    pst = conn.prepareStatement(sql);
                    pst.execute();
                    fieldClear__buyer();
                    buyer_table_load();
                   common_methods_.successMsgDelete();
 buyer_id();
                } catch (SQLException e) {
                     common_methods_.errorMsg();
                }
            } else {
                final JPanel panel = new JPanel();

                JOptionPane.showMessageDialog(panel, "Warning!!! Can't delete details without selecting a food ID ", "KOGA restaurant",
                        JOptionPane.WARNING_MESSAGE);
            }

        }
    }//GEN-LAST:event_jButton_DELETEActionPerformed

    private void jButton_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UPDATEActionPerformed
        // TODO add your handling code here:

        int x = JOptionPane.showConfirmDialog(null, "Do You Really Want To Update? ");
        if (x == 0) {
            String Buyer_ID = jTextField_BuyerID.getText();
            String Name = jTextField_Name.getText();
            String Owner_Name = jTextField_OwnerName.getText();
            String Address = jTextField_Address.getText();
            String Phone = jTextField_Phone.getText();

            String sql = "UPDATE buyers SET Buyer_ID = '" + Buyer_ID + "',Name = '" + Name + "',Owner_Name = '" + Owner_Name + "',Address = '" + Address + "',phone = '" + Phone + "' WHERE Buyer_ID = '" + Buyer_ID + "' ";
            try {
                pst = conn.prepareStatement(sql);
                pst.execute();
                buyer_table_load();
                  fieldClear__buyer();
                common_methods_.successMsg();
 buyer_id();
            } catch (SQLException e) {
                common_methods_.errorMsg();
            }
        }
    }//GEN-LAST:event_jButton_UPDATEActionPerformed

    private void jButton_SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SEARCHActionPerformed
        // TODO add your handling code here:

        //buyerId &name    
        if (jTextField_OwnerName.getText().isEmpty() == true) {

            try {

                String sql = "select * from buyers where Buyer_ID LIKE ? and Name LIKE ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_BuyerID.getText());
                pst.setString(2, jTextField_Name.getText());
                rs = pst.executeQuery();

                jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
               common_methods_.errorMsg();
            }
        }

        //buyerid+ownername
        if (jTextField_Name.getText().isEmpty() == true) {

            try {

                String sql = "select * from buyers where Buyer_ID=? and Name like ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_BuyerID.getText());
                pst.setString(2, jTextField_OwnerName.getText() + "%");
                rs = pst.executeQuery();

                jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
               common_methods_.errorMsg();
            }
        }

        //name+owner name
        if (jTextField_BuyerID.getText().isEmpty() == true) {

            try {

                String sql = "select * from buyers where Owner_Name LIKE ? and Name like ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_Name.getText());
                pst.setString(2, "%" + jTextField_OwnerName.getText() + "%");
                rs = pst.executeQuery();

                jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
               common_methods_.errorMsg();
            }
        }

        //onlyid
        if ((jTextField_Name.getText().isEmpty() == true) && (jTextField_OwnerName.getText().isEmpty() == true)) {

            try {

                String sql = "select * from buyers where Buyer_ID like ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_BuyerID.getText() + "%");

                rs = pst.executeQuery();

                jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                 common_methods_.errorMsg();
            }
        }

        //only  anme
        if ((jTextField_OwnerName.getText().isEmpty() == true) && (jTextField_BuyerID.getText().isEmpty() == true)) {

            try {

                String sql = "select * from buyers where Name like ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_Name.getText() + "%");

                rs = pst.executeQuery();

                jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
              common_methods_.errorMsg();
            }
        }

        //only owner name
        if ((jTextField_Name.getText().isEmpty() == true) && (jTextField_BuyerID.getText().isEmpty() == true)) {

            try {

                String sql = "select * from buyers where Owner_Name like ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_OwnerName.getText() + "%");

                rs = pst.executeQuery();

                jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (SQLException e) {
                common_methods_.errorMsg();
            }
        }
    }//GEN-LAST:event_jButton_SEARCHActionPerformed

    private void jTextField_OwnerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_OwnerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_OwnerNameActionPerformed

    private void jTextField_BuyerIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_BuyerIDKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (!jTextField_BuyerID.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please don't enter Buyer ID ", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                jTextField_Name.grabFocus();
            }

        }
    }//GEN-LAST:event_jTextField_BuyerIDKeyPressed

    private void jTextField_NameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_NameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (jTextField_Name.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please don't enter Buyer ID ", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                jTextField_OwnerName.grabFocus();
            }

        }
    }//GEN-LAST:event_jTextField_NameKeyPressed

    private void jTextField_OwnerNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_OwnerNameKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (jTextField_OwnerName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please don't enter Buyer ID ", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                jTextField_Address.grabFocus();
            }

        }
    }//GEN-LAST:event_jTextField_OwnerNameKeyPressed

    private void jTextField_PhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_PhoneKeyPressed
        // TODO add your handling code here:
//        if (evt.getKeyCode() == 10) {
//            if (jTextField_Address.getText().isEmpty()) {
//                JOptionPane.showMessageDialog(this, "Please don't enter Buyer ID ", "Error Message", JOptionPane.ERROR_MESSAGE);
//            } else {
//                jButton_ADD.grabFocus();
//            }
//
//        }
    }//GEN-LAST:event_jTextField_PhoneKeyPressed

    private void jTextField_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_NameActionPerformed

    private void jButton_PRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_PRINTActionPerformed
        // TODO add your handling code here:

        report();
        //         MessageFormat header =new MessageFormat("Report print");
        //        MessageFormat footer =new MessageFormat("page{0,number,integer}");
        //        try{
            //            jTable_food.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            //
            //        }catch(java.awt.print.PrinterException e){
            //            System.err.format("can not print %s%n", e.getMessage());
            //        }
    }//GEN-LAST:event_jButton_PRINTActionPerformed

    private void jButton1_DEmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_DEmoActionPerformed
        // TODO add your handling code here:
            jTextField_Name.setText("Aba Sewana");
        jTextField_OwnerName.setText("K.K.S.Renuka");
        jTextField_Address.setText("Shantha pedesa, Pothuarawa road,Koswattha");
        jTextField_Phone.setText("0773845689");
    }//GEN-LAST:event_jButton1_DEmoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buyers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buyers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buyers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buyers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Buyers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_DEmo;
    private javax.swing.JButton jButton_ADD;
    private javax.swing.JButton jButton_CLEAR;
    private javax.swing.JButton jButton_DELETE;
    private javax.swing.JButton jButton_PRINT;
    private javax.swing.JButton jButton_SEARCH;
    private javax.swing.JButton jButton_UPDATE;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Buyer;
    private javax.swing.JTextField jTextField_Address;
    private javax.swing.JTextField jTextField_BuyerID;
    private javax.swing.JTextField jTextField_Name;
    private javax.swing.JTextField jTextField_OwnerName;
    private javax.swing.JTextField jTextField_Phone;
    // End of variables declaration//GEN-END:variables

    private boolean Validation_buyer() {

        boolean bool = false;

        try {
              if (jTextField_Name.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter valid Buyer Name", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } else if (jTextField_OwnerName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter valid Buyer OwneName", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            }else if(!common_methods_.isValidPhoneNo(jTextField_Phone.getText())){
                  JOptionPane.showMessageDialog(this, "Please enter valid input for phone number of owner ", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            } else if (jTextField_Address.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter valid Buyer Address", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } else if (jTextField_Phone.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter valid Buyer Phone", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } else if ((jTextField_Name.getText().matches("[a-zA-Z]")) && (!jTextField_Name.getText().matches("[0-9 .]+"))) {

                JOptionPane.showMessageDialog(this, "Please enter Alphabetic input for Food Name of shop ", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } else if ((jTextField_OwnerName.getText().matches("[a-zA-Z]")) && (!jTextField_OwnerName.getText().matches("[0-9 .]+"))) {

                JOptionPane.showMessageDialog(this, "Please enter Alphabetic input for Food Name of shop owner", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } else if ((!jTextField_Phone.getText().matches("[0-9 .]+")) && (jTextField_Phone.getText().matches("[a-zA-Z]"))) {

                JOptionPane.showMessageDialog(this, "Please enter numeric input for phone number of owner ", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            }
                    

        } catch (HeadlessException e) {
            common_methods_.errorMsg();
            //  System.out.println(e);

        }
        return bool;

    }

    private void saveUser_buyer() {
        ///   int Buyer_ID = Integer.parseInt(jTextField_BuyerID.getText());
        String Name = jTextField_Name.getText();
        String Owner_Name = jTextField_OwnerName.getText();
        String Address = jTextField_Address.getText();
        int Phone = Integer.parseInt(jTextField_Phone.getText());

        try {
            String q = "INSERT INTO buyers (Name,Owner_Name,Address,phone) Values ('" + Name + "','" + Owner_Name + "','" + Address + "','" + Phone + "')";
            pst = conn.prepareStatement(q);
            pst.execute();
            fieldClear__buyer();
            buyer_table_load();
             common_methods_.successMsgAdd();

        } catch (SQLException e) {
             common_methods_.errorMsg();
        }

    }

    private void fieldClear__buyer() {

        try {
            jTextField_BuyerID.setText("");
            jTextField_Name.setText("");
            jTextField_OwnerName.setText("");
            jTextField_Address.setText("");
            jTextField_Phone.setText("");
        } catch (Exception e) {
           common_methods_.errorMsg();
        }
    }

    private void buyer_table_load() {

        try {

            String sql = "SELECT * FROM buyers";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            jTable_Buyer.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException e) {
            common_methods_.errorMsg();
        }
    }

//    private void errorMsg() {
//        final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Warning!!! Something in Wrong. ", "KOGA restaurant",
//                JOptionPane.WARNING_MESSAGE);
//
//    }

//    private void successMsg() {
//        final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Successfully Updated Your Modification ", "KOGA restaurant",
//                JOptionPane.OK_OPTION);
//
//    }

//    private void successMsgadd() {
//        final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Successfully Added Your Details ", "KOGA restaurant",
//                JOptionPane.OK_OPTION);
//    }

//    private void successMsgDelete() {
//        final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Successfully Deleted Your Details ", "KOGA restaurant",
//                JOptionPane.OK_OPTION);
//    }

    private void buyer_id() {
          int buyerid = 0;
       try {
                    String q = "SELECT Buyer_ID FROM buyers";
                    pst = conn.prepareStatement(q);
                    rs = pst.executeQuery();

                    while (rs.next()) {
                        buyerid = rs.getInt(1);
                    }
                    buyerid = buyerid + 1;
                    jTextField_BuyerID.setText(""+buyerid);
                   

                } catch (Exception e) {
                } }

    private void report() {
        try{
                        int sr = jTable_Buyer.getRowCount();
                        int cc = jTable_Buyer.getColumnCount();
                        Document document = new Document();
                        PdfWriter.getInstance(document, new FileOutputStream("Report of Buyers.pdf"));
                        document.open();
                     
                        document.add(new Paragraph(""));//Image title
                     
                        
                        document.add(new Paragraph("Koga Foods",FontFactory.getFont(FontFactory.TIMES_BOLD, 18, Font.BOLD)));
                          document.add(new Paragraph("No. 83/1",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                            document.add(new Paragraph("Heenatikumbura,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                                 document.add(new Paragraph("Thalangama North,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                            document.add(new Paragraph("Koswattha,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                            document.add(new Paragraph("0772342134,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));

                            document.add(new Paragraph(new Date().toString()));
                        document.add(new Paragraph("---------------------------------------------------------------------------------"));
                        PdfPTable table = new PdfPTable(cc);
                        
                        PdfPCell cell = new PdfPCell(new Paragraph("Details of Buyers"));
                        cell .setColspan(cc);
                        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                        cell.setBackgroundColor(BaseColor.GREEN);
                        table.addCell(cell);
                        for(int i=0;i<jTable_Buyer.getColumnCount();i++){
                            
                            PdfPCell cellCol = new PdfPCell(new Paragraph(jTable_Buyer.getColumnName(i),FontFactory.getFont(FontFactory.TIMES_BOLD, 10, Font.BOLD)));
                            cellCol.setColspan(1);
                            cellCol.setHorizontalAlignment(Element.ALIGN_CENTER);
                            
                            table.addCell(cellCol);
   
                        }
                        if(sr>0)
                            for(int i=0;i<sr;i++){
                                
                                for(int j=0;j<cc;j++)   
                                    if(jTable_Buyer.getValueAt(i, j)!=null)
                                        table.addCell(new Paragraph(jTable_Buyer.getValueAt(i, j).toString(),FontFactory.getFont(FontFactory.TIMES_BOLD, 8, Font.NORMAL)));
                                    else
                                        table.addCell(" ");

                            }
       
                        document.add(table);
                        document.close();
                        JOptionPane.showMessageDialog(null,"Report Saved");
                    
                        try{
                        //TEKE LINK
                            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+
                                    "E:\\hotelandresturent\\Report of Buyers.pdf");
                        
                        }catch(Exception ex){
                            
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    
        }catch(Exception ex){
                
                         JOptionPane.showMessageDialog(null, ex);
        }
      }  }

