package Delivery;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author SUJITH
 */
public class Vehicle extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    /**
     * Creates new form Vehicle
     */
    public Vehicle() {
        initComponents();

        conn = Dbconnecter.con();
    vehicleTableLoad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField_VehicleID = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton_ADD = new javax.swing.JButton();
        jButton_DELETE = new javax.swing.JButton();
        jButton_UPDATE = new javax.swing.JButton();
        jButton_SEARCH = new javax.swing.JButton();
        jButton_CLEAR = new javax.swing.JButton();
        jButton_PRINT = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_Vehicle = new javax.swing.JTable();
        jTextField_Model = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1_Type = new javax.swing.JComboBox<>();
        jComboBox1_make = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton_type = new javax.swing.JButton();
        jButton_make = new javax.swing.JButton();
        jButton_model = new javax.swing.JButton();
        jButton1_DEmo = new javax.swing.JButton();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Type");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("Vehicle ID");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Make");

        jTextField_VehicleID.setToolTipText("Don't Change when your try to update");
        jTextField_VehicleID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_VehicleIDKeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton_ADD.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_ADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/Vehicle.png"))); // NOI18N
        jButton_ADD.setText("Add");
        jButton_ADD.setActionCommand("Add ");
        jButton_ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ADDActionPerformed(evt);
            }
        });

        jButton_DELETE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_DELETE.setForeground(new java.awt.Color(255, 0, 51));
        jButton_DELETE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/remove.png"))); // NOI18N
        jButton_DELETE.setText("Delete");
        jButton_DELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DELETEActionPerformed(evt);
            }
        });

        jButton_UPDATE.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_UPDATE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/update.png"))); // NOI18N
        jButton_UPDATE.setText("Update");
        jButton_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UPDATEActionPerformed(evt);
            }
        });

        jButton_SEARCH.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_SEARCH.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/search.png"))); // NOI18N
        jButton_SEARCH.setText("Search");
        jButton_SEARCH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SEARCHActionPerformed(evt);
            }
        });

        jButton_CLEAR.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_CLEAR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/clear button.png"))); // NOI18N
        jButton_CLEAR.setText("Clear");
        jButton_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_CLEARActionPerformed(evt);
            }
        });

        jButton_PRINT.setBackground(new java.awt.Color(153, 204, 255));
        jButton_PRINT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_PRINT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delivery/icon/report (2).png"))); // NOI18N
        jButton_PRINT.setText("Report");
        jButton_PRINT.setToolTipText("Update food details");
        jButton_PRINT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_PRINTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_ADD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_DELETE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_UPDATE, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jButton_SEARCH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_CLEAR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_PRINT, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_DELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_UPDATE, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_CLEAR, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton_SEARCH, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jButton_PRINT, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );

        jTable_Vehicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Type", "Make", "Model", "Vehicle ID", "Status"
            }
        ));
        jTable_Vehicle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_VehicleMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_Vehicle);

        jTextField_Model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ModelActionPerformed(evt);
            }
        });
        jTextField_Model.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_ModelKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Model");

        jComboBox1_Type.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jComboBox1_Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Vehicle", "Lorry", "Bike" }));
        jComboBox1_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_TypeActionPerformed(evt);
            }
        });
        jComboBox1_Type.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox1_TypeKeyPressed(evt);
            }
        });

        jComboBox1_make.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1_make.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017" }));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setText("ADD VEHICLE");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Charts"));
        jPanel3.setToolTipText("");

        jButton_type.setBackground(new java.awt.Color(255, 255, 255));
        jButton_type.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_type.setText("Type");
        jButton_type.setToolTipText("Update food details");
        jButton_type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_typeActionPerformed(evt);
            }
        });

        jButton_make.setBackground(new java.awt.Color(255, 255, 255));
        jButton_make.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_make.setText("Make");
        jButton_make.setToolTipText("Update food details");
        jButton_make.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_makeActionPerformed(evt);
            }
        });

        jButton_model.setBackground(new java.awt.Color(255, 255, 255));
        jButton_model.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_model.setText("Model");
        jButton_model.setToolTipText("Update food details");
        jButton_model.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_modelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton_type, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jButton_make, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton_model, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_type, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_make, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_model, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jButton1_DEmo.setText("Demo");
        jButton1_DEmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_DEmoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_Model, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(jTextField_VehicleID, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(jComboBox1_make, 0, 181, Short.MAX_VALUE)
                            .addComponent(jComboBox1_Type, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton1_DEmo)
                        .addContainerGap(213, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBox1_Type, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField_VehicleID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1_make, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField_Model, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButton1_DEmo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ADDActionPerformed
        // TODO add your handling code here:

        if (Validation()) {

        } else {
            saveUser();
        }
    }//GEN-LAST:event_jButton_ADDActionPerformed

    private void jComboBox1_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_TypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1_TypeActionPerformed

    private void jTextField_ModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ModelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_ModelActionPerformed

    private void jButton_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_CLEARActionPerformed
        // TODO add your handling code here:
        fieldClear();
    }//GEN-LAST:event_jButton_CLEARActionPerformed

    private void jButton_DELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DELETEActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Do you want to Delete This");
        String as ="";
        int row=jTable_Vehicle.getSelectedRow();
        if (x == 0) {
            String id = jTextField_VehicleID.getText();
            String f ="Free";

          as=(String) jTable_Vehicle.getValueAt(row, 4);
                    if(as.equalsIgnoreCase("Free")){
                        String sql = "DELETE from vehicle where vehicle_ID = '" + id + "'";
                        try {
                            pst = conn.prepareStatement(sql);
                            pst.execute();
                            common_methods_.successMsgDelete();
                            vehicleTableLoad();
                            fieldClear();
                            
                            
                            
                        } catch (SQLException e) {
                            common_methods_.errorMsg2();
                        }
                    } else {
                        common_methods_.errorMsg2();
                    }}else{}
    }//GEN-LAST:event_jButton_DELETEActionPerformed

    private void jTable_VehicleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_VehicleMouseClicked
        // TODO add your handling code here:

        int row = jTable_Vehicle.getSelectedRow();

        String type = jTable_Vehicle.getValueAt(row, 0).toString();
        String vehicleId = jTable_Vehicle.getValueAt(row, 3).toString();
        String make = jTable_Vehicle.getValueAt(row, 1).toString();
        String model = jTable_Vehicle.getValueAt(row, 2).toString();
    // String status = (String) jTable_Vehicle.getValueAt(row, 4);

        jComboBox1_Type.setSelectedItem(type);
        jTextField_VehicleID.setText(vehicleId);
        jComboBox1_make.setSelectedItem(make);
        jTextField_Model.setText(model);
        
    }//GEN-LAST:event_jTable_VehicleMouseClicked

    private void jButton_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UPDATEActionPerformed
        // TODO add your handling code here:

        int x = JOptionPane.showConfirmDialog(null, "Do You Really Want To Update? ");
        if (x == 0) {
            String type = jComboBox1_Type.getSelectedItem().toString();
            String vehicleId = jTextField_VehicleID.getText();
            String make = jComboBox1_make.getSelectedItem().toString();
            String model = jTextField_Model.getText();
          

            String sql = "UPDATE vehicle SET Type = '" + type + "',Make = '" + make + "',Model = '" + model + "' WHERE Vehicle_ID = '" + vehicleId + "' ";
            try {
                pst = conn.prepareStatement(sql);
                pst.execute();
                vehicleTableLoad();
                 
  common_methods_.successMsg();
            } catch (SQLException e) {
                  common_methods_.errorMsg();
            }
        }

    }//GEN-LAST:event_jButton_UPDATEActionPerformed

    private void jButton_SEARCHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SEARCHActionPerformed
//all
if(("Select Vehicle".equals(jComboBox1_Type.getSelectedItem().toString()))&&("".equals(jTextField_VehicleID.getText()))&&("Year".equals(jComboBox1_make.getSelectedItem().toString()))&&("".equals(jTextField_Model.getText()))){

try {

                String sql = "select * from vehicle ";
                pst = conn.prepareStatement(sql);

              
    
                rs = pst.executeQuery();

                jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
            // System.out.println(e);                
            common_methods_.errorMsg();
            }
}

 //category+id      
        if ("Year".equals(jComboBox1_make.getSelectedItem().toString())) {

            try {

                String sql = "select * from vehicle where Vehicle_ID LIKE ? and Type LIKE ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_VehicleID.getText());
                pst.setString(2, jComboBox1_Type.getSelectedItem().toString());
                rs = pst.executeQuery();

                jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                 common_methods_.errorMsg();
              // System.out.println(e);
            }
        }

        //only category 
        if ((jTextField_VehicleID.getText().isEmpty()) && (jComboBox1_make.getSelectedItem()=="Year")) {

            if ("Select Vehicle".equals(jComboBox1_Type.getSelectedItem().toString())) {
                try {

                    String sql = "select * from vehicle";
                    pst = conn.prepareStatement(sql);
                    rs = pst.executeQuery();

                    jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception e) {
                      common_methods_.errorMsg();
                     //System.out.println(e);
                }
            } else {
                try {

                    String sql = "select * from vehicle where 	Type = ? ";
                    pst = conn.prepareStatement(sql);

                    pst.setString(1, jComboBox1_Type.getSelectedItem().toString());

                    rs = pst.executeQuery();

                    jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception e) {
                    common_methods_.errorMsg();
                    //System.out.println(e);
                }
            }

        }

        //only id
        if ((jComboBox1_make.getSelectedItem().toString() == "Year") && (jComboBox1_Type.getSelectedItem().toString() == "Select Vehicle")) {

            try {

                String sql = "select * from vehicle where Vehicle_ID like ?";
                pst = conn.prepareStatement(sql);

                pst.setString(1, jTextField_VehicleID.getText() + "%");

                rs = pst.executeQuery();

                jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
               // System.out.println(e);
               common_methods_.errorMsg();
            }
        }
//         //only make
//        if ((jTextField_VehicleID.getText().isEmpty() && (jComboBox1_Type.getSelectedItem().toString() == "Select Vehicle"))) {
//
//            try {
//
//                String sql = "select * from vehicle where 	Make like ?";
//                pst = conn.prepareStatement(sql);
//
//                pst.setString(1, jComboBox1_make.getSelectedItem().toString());
//
//                rs = pst.executeQuery();
//
//                jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));
//
//            } catch (Exception e) {
//               // System.out.println(e);
//               common_methods_.errorMsg();
//            }
//        }

    

    }//GEN-LAST:event_jButton_SEARCHActionPerformed

    private void jComboBox1_TypeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox1_TypeKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == 10) {
            if (jComboBox1_Type.getSelectedItem().toString().equals("Select Vehicle")) {
                JOptionPane.showMessageDialog(this, "Please select valid Vehicle Type", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                jTextField_VehicleID.grabFocus();
            }

        }
    }//GEN-LAST:event_jComboBox1_TypeKeyPressed

    private void jTextField_VehicleIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_VehicleIDKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == 10) {
            if (!jTextField_VehicleID.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please don't enter Vehicle ID", "Error Message", JOptionPane.ERROR_MESSAGE);
            } else {
                jComboBox1_make.grabFocus();
            }

        }
    }//GEN-LAST:event_jTextField_VehicleIDKeyPressed

    private void jTextField_ModelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_ModelKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            if (jTextField_Model.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Valid Model", "Error Message", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_jTextField_ModelKeyPressed

    private void jButton_typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_typeActionPerformed
        // TODO add your handling code here:
        genGraph1();
    }//GEN-LAST:event_jButton_typeActionPerformed

    private void jButton_makeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_makeActionPerformed
        // TODO add your handling code here:
        graph_make();
    }//GEN-LAST:event_jButton_makeActionPerformed

    private void jButton_modelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_modelActionPerformed
        // TODO add your handling code here:
        graph_model();
    }//GEN-LAST:event_jButton_modelActionPerformed

    private void jButton_PRINTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_PRINTActionPerformed
        // TODO add your handling code here:

        report();
        //         MessageFormat header =new MessageFormat("Report print");
        //        MessageFormat footer =new MessageFormat("page{0,number,integer}");
        //        try{
            //            jTable_food.print(JTable.PrintMode.FIT_WIDTH, header, footer);
            //
            //        }catch(java.awt.print.PrinterException e){
            //            System.err.format("can not print %s%n", e.getMessage());
            //        }
    }//GEN-LAST:event_jButton_PRINTActionPerformed

    private void jButton1_DEmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_DEmoActionPerformed
        // TODO add your handling code here:
          jComboBox1_Type.setSelectedItem("Bike");
        jTextField_VehicleID.setText("GG - 1995");
        jComboBox1_make.setSelectedItem("2015");
        jTextField_Model.setText("Honda");
    }//GEN-LAST:event_jButton1_DEmoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vehicle.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vehicle().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_DEmo;
    private javax.swing.JButton jButton_ADD;
    private javax.swing.JButton jButton_CLEAR;
    private javax.swing.JButton jButton_DELETE;
    private javax.swing.JButton jButton_PRINT;
    private javax.swing.JButton jButton_SEARCH;
    private javax.swing.JButton jButton_UPDATE;
    private javax.swing.JButton jButton_make;
    private javax.swing.JButton jButton_model;
    private javax.swing.JButton jButton_type;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JComboBox<String> jComboBox1_Type;
    private javax.swing.JComboBox<String> jComboBox1_make;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable_Vehicle;
    private javax.swing.JTextField jTextField_Model;
    private javax.swing.JTextField jTextField_VehicleID;
    // End of variables declaration//GEN-END:variables

    private boolean Validation() {
        boolean bool = false;
        try {
            if (jComboBox1_Type.getSelectedItem().toString().equals("Select Vehicle")) {
                JOptionPane.showMessageDialog(this, "Please select correct Vehicle", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            
//            } else if (!jTextField_VehicleID.getText().isEmpty()) {
//                JOptionPane.showMessageDialog(this, "Please don't enter vehivle ID", "Error Message", JOptionPane.ERROR_MESSAGE);
//                bool = true;
            } else if (jComboBox1_make.getSelectedItem().toString().equals("Year")) {
                JOptionPane.showMessageDialog(this, "Please enter valid vehivle make year", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } else if (jTextField_Model.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter valid vehivle Model", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            } 
                
            

        } catch (Exception e) {
           common_methods_.errorMsg();
          //  System.out.println(e);
        }
        return bool;
    }

    private void saveUser() {

        String type = jComboBox1_Type.getSelectedItem().toString();
         String vehicleId = jTextField_VehicleID.getText();
        String make = jComboBox1_make.getSelectedItem().toString();
        String model = jTextField_Model.getText();
       

        try {
            String q = "INSERT INTO vehicle (Type,Make,Model,Vehicle_ID) values ('" + type + "','" + make + "','" + model + "','" + vehicleId + "')";
            pst = conn.prepareStatement(q);
            pst.execute();

            fieldClear();
            vehicleTableLoad();
                 common_methods_.successMsgAdd();


        } catch (SQLException e) {
          //common_methods_.errorMsg();
            System.out.println(e);
        }

    }

    private void fieldClear() {
        try {
            jComboBox1_Type.setSelectedItem("Select Vehicle");
            jTextField_VehicleID.setText("");
            jComboBox1_make.setSelectedItem("Year");
            jTextField_Model.setText("");
          

        } catch (Exception e) {
             common_methods_.errorMsg();
        }
    }

    private void vehicleTableLoad() {

        try {
            String sql = "SELECT * FROM vehicle";
            pst = conn.prepareStatement(sql);
            rs = pst.executeQuery();

            jTable_Vehicle.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException e) {
          common_methods_.errorMsg();
         //   System.out.println(e);
        }

    }

//    private void errorMsg() {
//        final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Warning!!! Something in Wrong. ", "KOGA restaurant",
//                JOptionPane.WARNING_MESSAGE);
//
//    }

//    private void successMsg() {
//         final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Successfully Updated Your Modification ", "KOGA restaurant",
//                JOptionPane.OK_OPTION);
//
//  }

//    private void successMsgadd() {
//          final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Successfully Added Your Details ", "KOGA restaurant",
//                JOptionPane.INFORMATION_MESSAGE);
//    }

//    private void successMsgDelete() {
//      final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Successfully Deleted Your Details ", "KOGA restaurant",
//                JOptionPane.OK_OPTION);}

    private void genGraph1() {
        int sr;
                String Type; 
                sr = jTable_Vehicle.getRowCount();
                
   
                    DefaultPieDataset dataset = new DefaultPieDataset();
 
                            
                        for(int i=0;i<sr;i++)
                        {
                        
                            Type=jTable_Vehicle.getValueAt(i, 0).toString();

                            int count=0;
                            for(int j=0;j<sr;j++){
                                if(jTable_Vehicle.getValueAt(j, 0).toString().equals(Type))
                                    count++;
                                
                            }
                            
                            System.out.println(count);
                            dataset.setValue ("'"+Type+"'", new Integer (count));
                        }
                
                

 
                    JFreeChart chart = ChartFactory.createPieChart("Types of Vehicles", dataset, true, true, true);
 
                    ChartFrame yourFrame = new ChartFrame ("Koga Foods", chart);
 
                    yourFrame.setSize(600, 600);
 
                    yourFrame.setVisible(true);
                    
                     }

    private void graph_make() {
         int sr;
                String Make; 
                sr = jTable_Vehicle.getRowCount();
                
   
                    DefaultPieDataset dataset = new DefaultPieDataset();
 
                            
                        for(int i=0;i<sr;i++)
                        {
                        
                            Make=jTable_Vehicle.getValueAt(i, 1).toString();

                            int count=0;
                            for(int j=0;j<sr;j++){
                                if(jTable_Vehicle.getValueAt(j, 1).toString().equals(Make))
                                    count++;
                                
                            }
                            
                            System.out.println(count);
                            dataset.setValue ("'"+Make+"'", new Integer (count));
                        }
                
                

 
                    JFreeChart chart = ChartFactory.createPieChart("Make year of Vehicles", dataset, true, true, true);
 
                    ChartFrame yourFrame = new ChartFrame ("Koga Foods", chart);
 
                    yourFrame.setSize(600, 600);
 
                    yourFrame.setVisible(true);
                    
                     }

    private void graph_model() {
      int sr;
                String Model; 
                sr = jTable_Vehicle.getRowCount();
                
   
                    DefaultPieDataset dataset = new DefaultPieDataset();
 
                            
                        for(int i=0;i<sr;i++)
                        {
                        
                            Model=jTable_Vehicle.getValueAt(i, 2).toString();

                            int count=0;
                            for(int j=0;j<sr;j++){
                                if(jTable_Vehicle.getValueAt(j, 2).toString().equals(Model))
                                    count++;
                                
                            }
                            
                            System.out.println(count);
                            dataset.setValue ("'"+Model+"'", new Integer (count));
                        }
                
                

 
                    JFreeChart chart = ChartFactory.createPieChart("Models of Vehicles", dataset, true, true, true);
 
                    ChartFrame yourFrame = new ChartFrame ("Koga Foods", chart);
 
                    yourFrame.setSize(600, 600);
 
                    yourFrame.setVisible(true);
                    
                      }

    private void report() {
       try{
                        int sr = jTable_Vehicle.getRowCount();
                        int cc = jTable_Vehicle.getColumnCount();
                        Document document = new Document();
                        PdfWriter.getInstance(document, new FileOutputStream("Report of vehicles.pdf"));
                        document.open();
                     
                        document.add(new Paragraph(""));//Image title
                     
                        
                        document.add(new Paragraph("Koga Foods",FontFactory.getFont(FontFactory.TIMES_BOLD, 18, Font.BOLD)));
                          document.add(new Paragraph("No. 83/1",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                            document.add(new Paragraph("Heenatikumbura,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                                 document.add(new Paragraph("Thalangama North,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                            document.add(new Paragraph("Koswattha,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));
                            document.add(new Paragraph("0772342134,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, Font.NORMAL)));

                            document.add(new Paragraph(new Date().toString()));
                        document.add(new Paragraph("---------------------------------------------------------------------------------"));
                        PdfPTable table = new PdfPTable(cc);
                        
                        PdfPCell cell = new PdfPCell(new Paragraph("Details of Vehicle"));
                        cell .setColspan(cc);
                        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                        cell.setBackgroundColor(BaseColor.GREEN);
                        table.addCell(cell);
                        for(int i=0;i<jTable_Vehicle.getColumnCount();i++){
                            
                            PdfPCell cellCol = new PdfPCell(new Paragraph(jTable_Vehicle.getColumnName(i),FontFactory.getFont(FontFactory.TIMES_BOLD, 10, Font.BOLD)));
                            cellCol.setColspan(1);
                            cellCol.setHorizontalAlignment(Element.ALIGN_CENTER);
                            
                            table.addCell(cellCol);
   
                        }
                        if(sr>0)
                            for(int i=0;i<sr;i++){
                                
                                for(int j=0;j<cc;j++)   
                                    if(jTable_Vehicle.getValueAt(i, j)!=null)
                                        table.addCell(new Paragraph(jTable_Vehicle.getValueAt(i, j).toString(),FontFactory.getFont(FontFactory.TIMES_BOLD, 8, Font.NORMAL)));
                                    else
                                        table.addCell(" ");

                            }
       
                        document.add(table);
                        document.close();
                        JOptionPane.showMessageDialog(null,"Report Saved");
                    
                        try{
                        //TAKE LINK
                            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+
                                    "E:\\hotelandresturent\\Report of vehicles.pdf");
                        
                        }catch(Exception ex){
                            
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    
        }catch(Exception ex){
                
                         JOptionPane.showMessageDialog(null, ex);
        }
      }
      
}
