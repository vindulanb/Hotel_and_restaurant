package food;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import static java.lang.Double.parseDouble;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import net.proteanit.sql.DbUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author GIMHANI
 */
public class AddFoods extends javax.swing.JFrame {

    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    String foodName = "";
    double Price = 0.0;
    OrderI o = new OrderI();

    /**
     * Creates new form AddFoods
     */
    public AddFoods() {
        initComponents();
        conn = Dbconnecter.con();

        jLabel5.setText("" + OrderI.order_m);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jComboBox1_paymenttype = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jButton_reset = new javax.swing.JButton();
        jButton_print = new javax.swing.JButton();
        jButton_total = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jTextField32_change = new javax.swing.JTextField();
        jTextField35_amount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_addfood = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel5_selectedfood = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1_qty = new javax.swing.JTextField();
        jButton1_add = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField1_Unit_price = new javax.swing.JTextField();
        jButton1_delete = new javax.swing.JButton();
        jButton1_UPDATE = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1_selectedfood = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jComboBox_Category = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField_food_name = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField_price = new javax.swing.JTextField();
        jButton_search = new javax.swing.JButton();
        jButton_clear1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ADD FOOD TO ORDER");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("PAYMENT METHOD"));

        jComboBox1_paymenttype.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBox1_paymenttype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Payment", "Cash", "Credit Card" }));
        jComboBox1_paymenttype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_paymenttypeActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 153, Short.MAX_VALUE)
        );

        jButton_reset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_reset.setText("Reset");
        jButton_reset.setPreferredSize(new java.awt.Dimension(95, 32));
        jButton_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_resetActionPerformed(evt);
            }
        });

        jButton_print.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/food/icons/print.png"))); // NOI18N
        jButton_print.setText("Print");
        jButton_print.setPreferredSize(new java.awt.Dimension(95, 32));
        jButton_print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_printActionPerformed(evt);
            }
        });

        jButton_total.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_total.setForeground(new java.awt.Color(255, 0, 51));
        jButton_total.setIcon(new javax.swing.ImageIcon(getClass().getResource("/food/icons/calcilate.png"))); // NOI18N
        jButton_total.setText("Cal");
        jButton_total.setMaximumSize(new java.awt.Dimension(95, 32));
        jButton_total.setMinimumSize(new java.awt.Dimension(95, 32));
        jButton_total.setPreferredSize(new java.awt.Dimension(95, 32));
        jButton_total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_totalActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        jLabel13.setText("RS.");

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Cash"));

        jTextField32_change.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextField32_change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField32_changeActionPerformed(evt);
            }
        });

        jTextField35_amount.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Change : ");

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel14.setText("Amount: ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField32_change, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField35_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField35_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField32_change, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1_paymenttype, 0, 104, Short.MAX_VALUE)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 5, Short.MAX_VALUE))
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton_total, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jButton_reset, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_print, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(19, 19, 19))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jComboBox1_paymenttype, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton_print, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_total, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1_addfood.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1_addfood.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Food Category", "Food Name", "Food ID", "Price"
            }
        ));
        jTable1_addfood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1_addfoodMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1_addfood);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5_selectedfood.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jLabel5_selectedfood.setText("selected food");

        jLabel6.setText("Qty");

        jButton1_add.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1_add.setText("Add");
        jButton1_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_addActionPerformed(evt);
            }
        });

        jLabel7.setText("Unit Price");

        jTextField1_Unit_price.setText("Unit Price");

        jButton1_delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1_delete.setText("Delete");
        jButton1_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_deleteActionPerformed(evt);
            }
        });

        jButton1_UPDATE.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1_UPDATE.setText("Update");
        jButton1_UPDATE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1_UPDATEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField1_qty, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1_Unit_price, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1_add, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton1_delete)
                        .addGap(45, 45, 45)
                        .addComponent(jButton1_UPDATE)
                        .addGap(103, 103, 103))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5_selectedfood, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5_selectedfood, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField1_qty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField1_Unit_price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1_add)
                    .addComponent(jButton1_delete)
                    .addComponent(jButton1_UPDATE))
                .addGap(20, 20, 20))
        );

        jTable1_selectedfood.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jTable1_selectedfood.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Food Name", "Qty", "Tot amount"
            }
        ));
        jTable1_selectedfood.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1_selectedfoodMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1_selectedfood);

        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jComboBox_Category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Category", "Rice", "Meals", "Fast Food", "Juice", "Dessert" }));
        jComboBox_Category.setToolTipText("Select relevant category");
        jComboBox_Category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox_CategoryMouseClicked(evt);
            }
        });
        jComboBox_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_CategoryActionPerformed(evt);
            }
        });
        jComboBox_Category.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jComboBox_CategoryKeyPressed(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(255, 255, 204));
        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel8.setText("Food Category");

        jLabel9.setBackground(new java.awt.Color(255, 255, 204));
        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel9.setText("Food Name");

        jTextField_food_name.setToolTipText("Food name with only LETTERS");
        jTextField_food_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_food_nameActionPerformed(evt);
            }
        });
        jTextField_food_name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_food_nameKeyPressed(evt);
            }
        });

        jLabel10.setBackground(new java.awt.Color(255, 255, 204));
        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel10.setText("Price");

        jTextField_price.setToolTipText("Price will be REAL");
        jTextField_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_priceActionPerformed(evt);
            }
        });
        jTextField_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_priceKeyPressed(evt);
            }
        });

        jButton_search.setBackground(new java.awt.Color(153, 204, 255));
        jButton_search.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_search.setText("Search");
        jButton_search.setToolTipText("Search food ");
        jButton_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_searchActionPerformed(evt);
            }
        });

        jButton_clear1.setBackground(new java.awt.Color(153, 204, 255));
        jButton_clear1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton_clear1.setText("Clear");
        jButton_clear1.setToolTipText("Clear fields");
        jButton_clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_clear1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_price, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_clear1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jTextField_food_name, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jComboBox_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(104, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_clear1)
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_price, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboBox_Category, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField_food_name, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(90, Short.MAX_VALUE)))
        );

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Order ID");

        jLabel11.setText("Order ID : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_resetActionPerformed
        // TODO add your handling code here:
        try {
            jComboBox1_paymenttype.setSelectedItem("Payment");
            jTextField35_amount.setText("");
            jTextField32_change.setText("");
            jTextField2.setText("");

        } catch (Exception e) {
            Common_method.errorMsg(); 
        }

    }//GEN-LAST:event_jButton_resetActionPerformed

    private void jButton_printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_printActionPerformed
        try {
            printBill();
        } catch (SQLException ex) {
            Logger.getLogger(AddFoods.class.getName()).log(Level.SEVERE, null, ex);
        }
        int o_id = Integer.parseInt(jLabel5.getText());
        int rowCount = jTable1_selectedfood.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String name = (String) jTable1_selectedfood.getValueAt(i, 0);
            int qty = (int) jTable1_selectedfood.getValueAt(i, 1);
            String q = "INSERT INTO `order_product`(`order_id`,`foodName`, `qty`) VALUES('" + o_id + "','" + name + "','" + qty + "')";
            try {
                ps = conn.prepareStatement(q);
                ps.execute();
            } catch (Exception e) {
                Common_method.errorMsg(); 
            }

        }
        double p = parseDouble(jTextField2.getText());
        Date now = new Date();
//       String type= Order.order_type;
        try {
            String k ="INSERT INTO  order_details ( order_Type,order_ID , order_Time,price) VALUES ( '" + o.order_type + "','" + o_id + "' , '" + now + "' , '" + p + "')" ;

            ps = conn.prepareStatement(k);
            ps.execute();

        } catch (SQLException e) {
            Common_method.errorMsg(); 

        }

        String sq = "TRUNCATE table food_list ";
        try {
            ps = conn.prepareStatement(sq);
            ps.execute();
        } catch (Exception e) {
            Common_method.errorMsg(); 

        }
  
       // loadOrderInterface();
    }//GEN-LAST:event_jButton_printActionPerformed

    private void jButton_totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_totalActionPerformed
        // TODO add your handling code here:
        isempty();
 Validate();
        String type = jComboBox1_paymenttype.getSelectedItem().toString();
        if (null != type) {
            switch (type) {
                case "Cash":
                    double amount = Double.parseDouble(jTextField35_amount.getText());
                    double tot = Double.parseDouble(jTextField2.getText());
                    double balance = amount - tot;
                    jTextField32_change.setText("" + balance);
                    break;
                case "Credit Card":
                    jTextField35_amount.setText("");
                    jTextField32_change.setText("");
                default:
                    break;

            }
        }

        updatePaymnet();
    }//GEN-LAST:event_jButton_totalActionPerformed

    private void jTable1_addfoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1_addfoodMouseClicked
        // TODO add your handling code here:

        int row = jTable1_addfood.getSelectedRow();

        foodName = jTable1_addfood.getValueAt(row, 1).toString();
        Price = parseDouble(jTable1_addfood.getValueAt(row, 3).toString());
        jLabel5_selectedfood.setText("Selected food : " + foodName);
        jTextField1_Unit_price.setText("" + Price);

    }//GEN-LAST:event_jTable1_addfoodMouseClicked

    private void jComboBox_CategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox_CategoryMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jComboBox_CategoryMouseClicked

    private void jComboBox_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_CategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_CategoryActionPerformed

    private void jComboBox_CategoryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBox_CategoryKeyPressed

    }//GEN-LAST:event_jComboBox_CategoryKeyPressed

    private void jTextField_food_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_food_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_food_nameActionPerformed

    private void jTextField_food_nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_food_nameKeyPressed
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextField_food_nameKeyPressed

    private void jTextField_priceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_priceKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField_priceKeyPressed

    private void jButton_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_searchActionPerformed
//validate_search();
        //category+price
        if (jTextField_food_name.getText().isEmpty() == true) {

            try {

                String sql = "select * from food where Price>? and category=?";
                ps = conn.prepareStatement(sql);

                ps.setString(1, jTextField_price.getText());
                ps.setString(2, jComboBox_Category.getSelectedItem().toString());
                rs = ps.executeQuery();

                jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                 Common_method.errorMsg(); 
            }
        }

        //category+name
        if (jTextField_price.getText().isEmpty() == true) {

            try {

                String sql = "select * from food where category=? and foodName like ?";
                ps = conn.prepareStatement(sql);

                ps.setString(1, jComboBox_Category.getSelectedItem().toString());
                ps.setString(2, "%" + jTextField_food_name.getText() + "%");
                rs = ps.executeQuery();

                jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                   Common_method.errorMsg(); 
            }
        }

        //name+price
        if (jComboBox_Category.getSelectedItem().toString() == "Select") {

            try {

                String sql = "select * from food where Price>? and foodName like ?";
                ps = conn.prepareStatement(sql);

                ps.setString(1, jTextField_price.getText());
                ps.setString(2, "%" + jTextField_food_name.getText() + "%");
                rs = ps.executeQuery();

                jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                  Common_method.errorMsg(); 
            }
        }

        //only category
        if ((jTextField_price.getText().isEmpty() == true) && (jTextField_food_name.getText().isEmpty())) {

            if (jComboBox_Category.getSelectedItem().toString() == "All") {
                try {

                    String sql = "select * from food";
                    ps = conn.prepareStatement(sql);
                    rs = ps.executeQuery();

                    jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception e) {
                       Common_method.errorMsg(); 
                }
            } else {
                try {

                    String sql = "select * from food where category=? ";
                    ps = conn.prepareStatement(sql);

                    ps.setString(1, jComboBox_Category.getSelectedItem().toString());

                    rs = ps.executeQuery();

                    jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

                } catch (Exception e) {
                       Common_method.errorMsg(); 
                }
            }

        }

        //only name
        if ((jTextField_price.getText().isEmpty() == true) && (jComboBox_Category.getSelectedItem().toString() == "Select")) {

            try {

                String sql = "select * from food where foodName like ?";
                ps = conn.prepareStatement(sql);

                ps.setString(1, "%" + jTextField_food_name.getText() + "%");

                rs = ps.executeQuery();

                jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                   Common_method.errorMsg(); 
            }
        }

        //only price
        if ((jTextField_food_name.getText().isEmpty()) && (jComboBox_Category.getSelectedItem().toString() == "Select")) {

            try {

                String sql = "select * from food where Price>? ";
                ps = conn.prepareStatement(sql);

                ps.setString(1, jTextField_price.getText());

                rs = ps.executeQuery();

                jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                   Common_method.errorMsg(); 
            }
        }
    }//GEN-LAST:event_jButton_searchActionPerformed

    private void jTextField_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_priceActionPerformed

    private void jButton_clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_clear1ActionPerformed
        // TODO add your handling code here:
        fieldClear();
    }//GEN-LAST:event_jButton_clear1ActionPerformed

    private void jButton1_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_addActionPerformed

        validate1();
        String qt = (String) (jTextField1_qty.getText());
        int qty = Integer.parseInt(qt);
        double price = Price * qty;

        String q = "INSERT INTO food_list(foodName,qty,tot_amount) VALUES ('" + foodName + "','" + qty + "','" + price + "') ";
        try {
            ps = conn.prepareStatement(q);
            ps.execute();

            //   jTable1_addfood.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
              Common_method.errorMsg(); 
        }
        foodlistload();
        resetf();

    }//GEN-LAST:event_jButton1_addActionPerformed

    private void jComboBox1_paymenttypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_paymenttypeActionPerformed
        // TODO add your handling code here:

        String id = jComboBox1_paymenttype.getSelectedItem().toString();
        if (null != id) {
            if (id.equals("Cash")) {

                jTextField35_amount.setEnabled(true);
                jTextField32_change.setEnabled(true);
            } else if (id.equals("Credit Card")) {

                jTextField35_amount.setEnabled(false);
                jTextField32_change.setEnabled(false);
                jButton_total.setEnabled(false);

            }
        }
        String q = "SELECT SUM(tot_amount) FROM food_list";
        try {
            ps = conn.prepareStatement(q);
            rs = ps.executeQuery();

            if (rs.next()) {
                double tot = rs.getDouble(1);
                jTextField2.setText("" + tot);

            }

        } catch (Exception e) {
               Common_method.errorMsg(); 
        }

    }//GEN-LAST:event_jComboBox1_paymenttypeActionPerformed

    private void jTextField32_changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField32_changeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField32_changeActionPerformed

    private void jButton1_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_deleteActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Do You Really Want to Delete this Selected Food?");

        if (x == 0) {
            int row = jTable1_selectedfood.getSelectedRow();

            String foodName = jTable1_selectedfood.getValueAt(row, 0).toString();
//        String qty = jTable1_selectedfood.getValueAt(row, 2).toString();
//        String tot_amount = jTable1_selectedfood.getValueAt(row, 3).toString();
            if (foodName.equals(jTable1_selectedfood.getValueAt(row, 0).toString())) {
                String sql = "DELETE FROM food_list WHERE foodName = '" + foodName + "'";

                try {
                    ps = conn.prepareStatement(sql);
                    ps.execute();
                    foodlistload();

                } catch (Exception e) {
                       Common_method.errorMsg(); 
                }
            } else {
                final JPanel panel = new JPanel();

                JOptionPane.showMessageDialog(panel, "Warning!!! Can't delete details without selecting a food ID ", "KOGA restaurant",
                        JOptionPane.WARNING_MESSAGE);
            }

        }

    }//GEN-LAST:event_jButton1_deleteActionPerformed

    private void jTable1_selectedfoodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1_selectedfoodMouseClicked
        // TODO add your handling code here:
        int row = jTable1_selectedfood.getSelectedRow();

        String foodName = jTable1_selectedfood.getValueAt(row, 0).toString();
        String qty = jTable1_selectedfood.getValueAt(row, 1).toString();
//        String tot_amount = jTable1_selectedfood.getValueAt(row, 3).toString();
        
       

        jLabel5_selectedfood.setText(foodName);
        jTextField1_qty.setText(qty);
       
    }//GEN-LAST:event_jTable1_selectedfoodMouseClicked

    private void jButton1_UPDATEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1_UPDATEActionPerformed
        // TODO add your handling code here:
            int x = JOptionPane.showConfirmDialog(null, "Do You Really Want To Update?");
        if (x == 0) {
            String food  = jLabel5_selectedfood.getText();
//            int qty = parseInt(jTextField1_qty.getText());
         
               String qt = (String) (jTextField1_qty.getText());
        int qty1 = Integer.parseInt(qt);
        double price = Price * qty1;
        
        

        String sql = "UPDATE food_list SET foodName = '" + food + "', qty = '" + qty1 + "',tot_amount = '" + Price + "' WHERE foodName = '" + food + "'";
            try {
                ps = conn.prepareStatement(sql);
                ps.execute();
        
            } catch (Exception e) {
               Common_method.errorMsg(); 
            }
              foodlistload();
        resetf();

        }
    }//GEN-LAST:event_jButton1_UPDATEActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddFoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddFoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddFoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddFoods.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddFoods().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1_UPDATE;
    private javax.swing.JButton jButton1_add;
    private javax.swing.JButton jButton1_delete;
    private javax.swing.JButton jButton_clear1;
    private javax.swing.JButton jButton_print;
    private javax.swing.JButton jButton_reset;
    private javax.swing.JButton jButton_search;
    private javax.swing.JButton jButton_total;
    private javax.swing.JComboBox<String> jComboBox1_paymenttype;
    private javax.swing.JComboBox<String> jComboBox_Category;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel5_selectedfood;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1_addfood;
    private javax.swing.JTable jTable1_selectedfood;
    private javax.swing.JTextField jTextField1_Unit_price;
    private javax.swing.JTextField jTextField1_qty;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField32_change;
    private javax.swing.JTextField jTextField35_amount;
    private javax.swing.JTextField jTextField_food_name;
    private javax.swing.JTextField jTextField_price;
    // End of variables declaration//GEN-END:variables

//    private void errorMsg() {
//        final JPanel panel = new JPanel();
//
//        JOptionPane.showMessageDialog(panel, "Warning!!! Something in Wrong. ", "KOGA restaurant",
//                JOptionPane.WARNING_MESSAGE);
//
//    }

    private void fieldClear() {
        try {
            jComboBox_Category.setSelectedItem("Category");
            jTextField_food_name.setText("");

            jTextField_price.setText("");

        } catch (Exception e) {
               Common_method.errorMsg(); 
        }
    }

    private void printBill() throws SQLException {



try{
                        int sr = jTable1_selectedfood.getRowCount();
                        int cc = jTable1_selectedfood.getColumnCount();
                        Document document = new Document();
                        PdfWriter.getInstance(document, new FileOutputStream("Bill.pdf"));
                        document.open();
                     
                        document.add(new Paragraph(""));
                     
                        
                        document.add(new Paragraph("Koga Foods",FontFactory.getFont(FontFactory.TIMES_BOLD, 18, com.itextpdf.text.Font.BOLD)));
                          document.add(new Paragraph("No. 83/1",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                            document.add(new Paragraph("Heenatikumbura,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                                 document.add(new Paragraph("Thalangama North,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                            document.add(new Paragraph("Koswattha,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                            document.add(new Paragraph("0772342134,",FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));

                            document.add(new Paragraph(new Date().toString()));
                        document.add(new Paragraph("---------------------------------------------------------------------------------"));
                        PdfPTable table = new PdfPTable(cc);
                        
                        PdfPCell cell = new PdfPCell(new Paragraph("Thank You!!!  Come Again..."));
                        cell .setColspan(cc);
                        cell.setHorizontalAlignment(Element.ALIGN_CENTER);
                        cell.setBackgroundColor(BaseColor.GREEN);
                        table.addCell(cell);
                        for(int i=0;i<jTable1_selectedfood.getColumnCount();i++){
                            
                            PdfPCell cellCol = new PdfPCell(new Paragraph(jTable1_selectedfood.getColumnName(i),FontFactory.getFont(FontFactory.TIMES_BOLD, 10, com.itextpdf.text.Font.BOLD)));
                            cellCol.setColspan(1);
                            cellCol.setHorizontalAlignment(Element.ALIGN_CENTER);
                            
                            table.addCell(cellCol);
   
                        }
                        if(sr>0)
                            for(int i=0;i<sr;i++){
                                
                                for(int j=0;j<cc;j++)   
                                    if(jTable1_selectedfood.getValueAt(i, j)!=null)
                                        table.addCell(new Paragraph(jTable1_selectedfood.getValueAt(i, j).toString(),FontFactory.getFont(FontFactory.TIMES_BOLD, 8, com.itextpdf.text.Font.NORMAL)));
                                    else
                                        table.addCell(" ");

                            }
       
                        document.add(table);
                         document.add(new Paragraph(""));

                          document.add(new Paragraph("Payment done by : " +jComboBox1_paymenttype.getSelectedItem().toString(),FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                             document.add(new Paragraph("You Have to Pay : Rs." +jTextField2.getText(),FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                             document.add(new Paragraph("Paid : Rs." +jTextField35_amount.getText(),FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));
                             document.add(new Paragraph("Change: Rs." +jTextField32_change.getText(),FontFactory.getFont(FontFactory.TIMES_ITALIC, 10, com.itextpdf.text.Font.NORMAL)));

                        document.close();
                        JOptionPane.showMessageDialog(null,"Report Saved");
                    
                        try{
                        
                            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+
                                    "E:\\hotelandresturent\\Bill.pdf");
                        
                        }catch(Exception ex){
                            
                            JOptionPane.showMessageDialog(null, ex);
                        }
                    
        }catch(Exception ex){
                
                         JOptionPane.showMessageDialog(null, ex);
        } 
    }

    private void loadOrderInterface() {

        this.dispose();

    }

    private void resetf() {

        jLabel5_selectedfood.setText("selected food");
        jTextField1_qty.setText("");
        jTextField1_Unit_price.setText("Unit Price");
    }

    private void updatePaymnet() {
        int o_id = Integer.parseInt(jLabel5.getText());
        String method = jComboBox1_paymenttype.getSelectedItem().toString();
        double tot = Double.parseDouble(jTextField2.getText());
        String q = "INSERT INTO `payment`(`order_id`, `payment_method`, `total_amount`) VALUES('" + o_id + "','" + method + "','" + tot + "')";
        try {
            ps = conn.prepareStatement(q);
            ps.execute();
        } catch (Exception e) {
        //   errorMsg();
          //  System.out.println(e);
        }

    }

    private void foodlistload() {
        String sql = "SELECT * FROM food_list";
        try {
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            jTable1_selectedfood.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
               Common_method.errorMsg(); 
        }
    }

    private void Validate() {
        if(!Common_method.numberOnly(jTextField35_amount.getText())){
                  JOptionPane.showMessageDialog(this, "Please enter valid amount ", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            } 
    
    }

    private void validate1() {
          if(jTextField1_qty.getText().isEmpty()){
                  JOptionPane.showMessageDialog(this, "Please enter valid amount ", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            }
       if(!Common_method.numberOnly(jTextField1_qty.getText())){
                  JOptionPane.showMessageDialog(this, "Please enter valid amount ", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            }}

    private void isempty() {
      boolean bool = false;

        try {
              if (jTextField35_amount.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter Amount", "Error Message", JOptionPane.ERROR_MESSAGE);
                bool = true;
            }
        }
             catch (Exception e) {
            }

        }

    private void validate_search() {
    if(!Common_method.numberOnly(jTextField_price.getText())){
                  JOptionPane.showMessageDialog(this, "Please enter valid amount ", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            }
    
     if(!Common_method.textOnly(jTextField_food_name.getText())){
                  JOptionPane.showMessageDialog(this, "Please enter valid food name ", "Error Message", JOptionPane.ERROR_MESSAGE);
            
            }
    }
    
}
